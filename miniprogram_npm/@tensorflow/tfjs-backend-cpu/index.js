/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@tensorflow/tfjs-core"),require("seedrandom")):"function"==typeof define&&define.amd?define(["exports","@tensorflow/tfjs-core","seedrandom"],t):t((e=e||self).tf=e.tf||{},e.tf,e.seedrandom)}(this,(function(e,t,a){"use strict";var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var a in t)t.hasOwnProperty(a)&&(e[a]=t[a])})(e,t)};function n(e,t,a,r){return new(a||(a=Promise))((function(n,o){function i(e){try{d(r.next(e))}catch(e){o(e)}}function s(e){try{d(r.throw(e))}catch(e){o(e)}}function d(e){var t;e.done?n(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(i,s)}d((r=r.apply(e,t||[])).next())}))}function o(e,t){var a,r,n,o,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(a)throw new TypeError("Generator is already executing.");for(;i;)try{if(a=1,r&&(n=2&o[0]?r.return:o[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,o[1])).done)return n;switch(r=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,r=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(n=i.trys,(n=n.length>0&&n[n.length-1])||6!==o[0]&&2!==o[0])){i=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){i.label=o[1];break}if(6===o[0]&&i.label<n[1]){i.label=n[1],n=o;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(o);break}n[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],r=0}finally{a=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}function i(e,a){Array.isArray(e)||(e=[e]),e.forEach((function(e){null!=e&&t.util.assert("complex64"!==e.dtype,(function(){return a+" does not support complex64 tensors in the CPU backend."}))}))}var s=t.kernel_impls.nonMaxSuppressionV3Impl,d=t.kernel_impls.split,u=t.kernel_impls.tile,p=t.kernel_impls.topkImpl,l=t.kernel_impls.whereImpl;function f(e,a,r,n){if("linear"===r)return e.linear(a);if("relu"===r)return e.relu(a);if("elu"===r)return t.elu(a);if("relu6"===r)return e.relu6(a);if("prelu"===r)return e.prelu(a,n);throw new Error("Activation "+r+" has not been implemented for the CPU backend.")}var c=function(e){function c(){var a=e.call(this)||this;return a.blockSize=48,a.firstUse=!0,a.data=new t.DataStorage(a,t.engine()),a}return function(e,t){function a(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)}(c,e),c.prototype.write=function(e,a,r){this.firstUse&&(this.firstUse=!1,t.env().get("IS_NODE")&&t.backend_util.warn("\n============================\nHi there ðŸ‘‹. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));var n={};return this.data.set(n,{values:e,dtype:r,refCount:1}),n},c.prototype.makeTensorInfo=function(e,t,a){return{dataId:this.write(a,e,t),shape:e,dtype:t}},c.prototype.incRef=function(e){this.data.get(e).refCount++},c.prototype.decRef=function(e){this.data.has(e)&&this.data.get(e).refCount--},c.prototype.move=function(e,t,a,r){this.data.set(e,{values:t,dtype:r,refCount:1})},c.prototype.numDataIds=function(){return this.data.numDataIds()},c.prototype.read=function(e){return n(this,void 0,void 0,(function(){return o(this,(function(t){return[2,this.readSync(e)]}))}))},c.prototype.readSync=function(e){var a=this.data.get(e),r=a.dtype,n=a.complexTensorInfos;if("complex64"===r){var o=this.readSync(n.real.dataId),i=this.readSync(n.imag.dataId);return t.backend_util.mergeRealAndImagArrays(o,i)}return this.data.get(e).values},c.prototype.bufferSync=function(e){var a=this.readSync(e.dataId),r=a;if("string"===e.dtype)try{r=a.map((function(e){return t.util.decodeString(e)}))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return t.buffer(e.shape,e.dtype,r)},c.prototype.makeOutput=function(e,a,r){var n=this.write(e,a,r);return t.engine().makeTensorFromDataId(n,a,r,this)},c.prototype.disposeData=function(e){if(this.data.has(e)){var t=this.data.get(e).complexTensorInfos;null!=t&&(this.disposeData(t.real.dataId),this.disposeData(t.imag.dataId)),this.data.delete(e)}},c.prototype.disposeIntermediateTensorInfo=function(e){var t=e.dataId;if(this.data.has(t)){var a=this.data.get(t);a.refCount--,a.refCount<1&&this.disposeData(t)}},c.prototype.time=function(e){return n(this,void 0,void 0,(function(){var a;return o(this,(function(r){return a=t.util.now(),e(),[2,{kernelMs:t.util.now()-a}]}))}))},c.prototype.memory=function(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}},c.prototype.stridedSlice=function(e,a,r,n){i(e,"stridedSlice");var o=t.slice_util.computeOutShape(a,r,n);if(o.some((function(e){return 0===e})))return t.tensor([],o);for(var s=t.buffer(o,e.dtype),d=this.bufferSync(e),u=0;u<s.size;u++){for(var p=s.indexToLoc(u),l=new Array(p.length),f=0;f<l.length;f++)l[f]=p[f]*n[f]+a[f];s.set.apply(s,[d.get.apply(d,l)].concat(p))}return s.toTensor()},c.prototype.diag=function(e){for(var a=this.readSync(e.dataId),r=t.buffer([e.size,e.size],e.dtype),n=r.values,o=0;o<a.length;o++)n[o*e.size+o]=a[o];return r.toTensor()},c.prototype.unstack=function(e,a){for(var r=e.shape[a],n=new Array(e.rank-1),o=0,i=0;i<e.rank;i++)i!==a&&(n[o++]=e.shape[i]);var s=new Array(e.rank).fill(0),d=e.shape.slice();d[a]=1;var u=new Array(r);for(i=0;i<u.length;i++)s[a]=i,u[i]=t.slice(e,s,d).reshape(n);return u},c.prototype.reverse=function(e,a){i(e,"reverse");for(var r=t.buffer(e.shape,e.dtype),n=this.bufferSync(e),o=function(t){var o=r.indexToLoc(t),i=o.slice();a.forEach((function(t){return i[t]=e.shape[t]-1-i[t]})),r.set.apply(r,[n.get.apply(n,i)].concat(o))},s=0;s<r.size;s++)o(s);return r.toTensor()},c.prototype.neg=function(e){return i(e,"neg"),t.mul(t.scalar(-1),e)},c.prototype.addN=function(e){var a=this;i(e,"addN");for(var r=e.map((function(e){return a.readSync(e.dataId)})),n=t.buffer(e[0].shape,e[0].dtype),o=n.values,s=0;s<e.length;s++)for(var d=r[s],u=0;u<o.length;u++)o[u]+=d[u];return n.toTensor()},c.prototype.softmax=function(e,a){var r=t.util.parseAxisParam([a],e.shape),n=t.max(e,r),o=t.backend_util.expandShapeToKeepDim(n.shape,r),i=t.sub(e,n.reshape(o)),s=t.exp(i),d=this.sum(s,r).reshape(o);return t.div(s,d)},c.prototype.pow=function(e,t){return i([e,t],"pow"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.pow(e,t)}))},c.prototype.batchMatMul=function(e,a,r,n){i([e,a],"matMul");for(var o=r?e.shape[1]:e.shape[2],s=r?e.shape[2]:e.shape[1],d=n?a.shape[1]:a.shape[2],u=e.shape[0],p=this.readSync(e.dataId),l=this.readSync(a.dataId),f=r?[e.strides[0],1,e.strides[1]]:[e.strides[0],e.strides[1],1],c=f[0],h=f[1],v=f[2],m=n?[1,a.strides[1],a.strides[0]]:[a.strides[1],1,a.strides[0]],y=m[0],k=m[1],g=m[2],I=s*d,b=t.buffer([u,s,d],e.dtype),S=b.values,T=this.blockSize,N=0;N<u;N++)for(var x=0;x<s;x+=T)for(var M=0;M<d;M+=T)for(var F=0;F<o;F+=T)for(var A=Math.min(x+T,s),D=Math.min(M+T,d),_=Math.min(F+T,o),z=x;z<A;z++)for(var W=M;W<D;W++){for(var H=0,w=F;w<_;w++)H+=p[N*c+z*h+w*v]*l[w*y+W*k+N*g];S[N*I+(z*d+W)]+=H}return b.toTensor()},c.prototype.fusedBatchMatMul=function(e){var a=e.a,r=e.b,n=e.transposeA,o=e.transposeB,i=e.bias,s=e.activation,d=e.preluActivationWeights,u=this.batchMatMul(a,r,n,o);return i&&(u=t.add(u,i)),s&&(u=f(this,u,s,d)),u},c.prototype.floorDiv=function(e,t){i([e,t],"floorDiv");return this.broadcastedBinaryOp(e,t,"int32",(function(e,t){return Math.floor(e/t)}))},c.prototype.sum=function(e,a){i(e,"sum"),t.backend_util.assertAxesAreInnerMostDims("sum",a,e.rank);for(var r=t.backend_util.computeOutAndReduceShapes(e.shape,a),n=r[0],o=r[1],s=t.upcastType(e.dtype,"int32"),d=t.zeros(n,s),u=t.util.sizeFromShape(o),p=this.readSync(d.dataId),l=this.readSync(e.dataId),f=0;f<p.length;++f){for(var c=f*u,h=0,v=0;v<u;++v)h+=l[c+v];p[f]=h}return d},c.prototype.prod=function(e,a){i(e,"sum");for(var r=t.backend_util.computeOutAndReduceShapes(e.shape,a),n=r[0],o=r[1],s=t.upcastType(e.dtype,"int32"),d=t.zeros(n,s),u=t.util.sizeFromShape(o),p=this.readSync(d.dataId),l=this.readSync(e.dataId),f=0;f<p.length;++f){for(var c=f*u,h=1,v=0;v<u;++v)h*=l[c+v];p[f]=h}return d},c.prototype.unsortedSegmentSum=function(e,a,r){i(e,"unsortedSegmentSum");for(var n=[],o=e.rank-a.rank,s=0;s<o;++s)a=a.expandDims(s+1);for(s=0;s<r;++s){var d=t.scalar(s,"int32"),u=t.equal(d,a).asType("float32").mul(e).sum(0);n.push(u)}return t.stack(n)},c.prototype.argMin=function(e,a){i(e,"argMin");var r=[a];t.backend_util.assertAxesAreInnerMostDims("argMin",r,e.rank);for(var n=t.backend_util.computeOutAndReduceShapes(e.shape,r),o=n[0],s=n[1],d=t.zeros(o,"int32"),u=t.util.sizeFromShape(s),p=this.readSync(d.dataId),l=this.readSync(e.dataId),f=0;f<p.length;++f){for(var c=f*u,h=l[c],v=0,m=0;m<u;++m){var y=l[c+m];y<h&&(h=y,v=m)}p[f]=v}return d},c.prototype.argMax=function(e,a){i(e,"argMax");var r=[a];t.backend_util.assertAxesAreInnerMostDims("argMax",r,e.rank);for(var n=t.backend_util.computeOutAndReduceShapes(e.shape,r),o=n[0],s=n[1],d=t.zeros(o,"int32"),u=t.util.sizeFromShape(s),p=this.readSync(d.dataId),l=this.readSync(e.dataId),f=0;f<p.length;++f){for(var c=f*u,h=l[c],v=0,m=0;m<u;++m){var y=l[c+m];y>h&&(h=y,v=m)}p[f]=v}return d},c.prototype.cumsum=function(e,a,r,n){if(i(e,"cumsum"),a!==e.rank-1)throw new Error("backend.cumsum in CPU expects an inner-most axis="+(e.rank-1)+" but got axis="+a);for(var o=t.upcastType(e.dtype,"int32"),s=t.zeros(e.shape,o),d=this.readSync(s.dataId),u=this.readSync(e.dataId),p=e.shape[e.rank-1],l=n?function(e,t){return e+p-t-1}:function(e,t){return e+t},f=0;f<u.length;f+=p)for(var c=0;c<p;c++){var h=l(f,c);if(0===c)d[h]=r?0:u[h];else{var v=l(f,c-1);d[h]=r?u[v]+d[v]:u[h]+d[v]}}return s},c.prototype.equal=function(e,t){return i([e,t],"equal"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e===t?1:0}))},c.prototype.notEqual=function(e,t){return i([e,t],"notEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e!==t?1:0}))},c.prototype.less=function(e,t){return i([e,t],"less"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e<t?1:0}))},c.prototype.lessEqual=function(e,t){return i([e,t],"lessEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e<=t?1:0}))},c.prototype.greater=function(e,t){return i([e,t],"greater"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e>t?1:0}))},c.prototype.greaterEqual=function(e,t){return i([e,t],"greaterEqual"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e>=t?1:0}))},c.prototype.logicalAnd=function(e,t){return i([e,t],"logicalAnd"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e&&t}))},c.prototype.logicalOr=function(e,t){return i([e,t],"logicalOr"),this.broadcastedBinaryOp(e,t,"bool",(function(e,t){return e||t}))},c.prototype.select=function(e,a,r){i([e,a,r],"select");for(var n=this.readSync(e.dataId),o=this.readSync(a.dataId),s=this.readSync(r.dataId),d=t.zeros(a.shape,t.upcastType(a.dtype,r.dtype)),u=this.readSync(d.dataId),p=0,l=0===e.rank||e.rank>1||1===a.rank?1:t.util.sizeFromShape(a.shape.slice(1)),f=0;f<n.length;f++)for(var c=0;c<l;c++)1===n[f]?u[p++]=o[f]:u[p++]=s[f];return d},c.prototype.where=function(e){i([e],"where");var t=this.readSync(e.dataId);return l(e.shape,t)},c.prototype.topk=function(e,t,a){i(e,"topk");var r=this.readSync(e.dataId);return p(r,e.shape,e.dtype,t,a)},c.prototype.min=function(e,a){i(e,"min"),t.backend_util.assertAxesAreInnerMostDims("min",a,e.rank);for(var r=t.backend_util.computeOutAndReduceShapes(e.shape,a),n=r[0],o=r[1],s=t.zeros(n,e.dtype),d=t.util.sizeFromShape(o),u=this.readSync(s.dataId),p=this.readSync(e.dataId),l=0;l<u.length;++l){for(var f=l*d,c=p[f],h=0;h<d;++h){var v=p[f+h];v<c&&(c=v)}u[l]=c}return s},c.prototype.minimum=function(e,t){return i([e,t],"minimum"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.min(e,t)}))},c.prototype.mod=function(e,t){return i([e,t],"mod"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){var a=e%t;return e<0&&t<0||e>=0&&t>=0?a:(a+t)%t}))},c.prototype.maximum=function(e,t){return i([e,t],"maximum"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.max(e,t)}))},c.prototype.all=function(e,a){i(e,"all"),t.backend_util.assertAxesAreInnerMostDims("all",a,e.rank);for(var r=t.backend_util.computeOutAndReduceShapes(e.shape,a),n=r[0],o=r[1],s=t.zeros(n,e.dtype),d=t.util.sizeFromShape(o),u=this.readSync(s.dataId),p=this.readSync(e.dataId),l=0;l<u.length;++l){for(var f=l*d,c=p[f],h=0;h<d;++h){var v=p[f+h];c=c&&v}u[l]=c}return s},c.prototype.any=function(e,a){i(e,"any"),t.backend_util.assertAxesAreInnerMostDims("any",a,e.rank);for(var r=t.backend_util.computeOutAndReduceShapes(e.shape,a),n=r[0],o=r[1],s=t.zeros(n,e.dtype),d=t.util.sizeFromShape(o),u=this.readSync(s.dataId),p=this.readSync(e.dataId),l=0;l<u.length;++l){for(var f=l*d,c=p[f],h=0;h<d;++h){var v=p[f+h];c=c||v}u[l]=c}return s},c.prototype.squaredDifference=function(e,t){return i([e,t],"squaredDifference"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){var a=e-t;return a*a}))},c.prototype.linear=function(e){return e},c.prototype.relu=function(e){i(e,"relu");for(var a=t.zeros(e.shape,e.dtype),r=this.readSync(a.dataId),n=this.readSync(e.dataId),o=0;o<n.length;++o)r[o]=Math.max(0,n[o]);return a},c.prototype.relu6=function(e){i(e,"relu");for(var a=t.zeros(e.shape,e.dtype),r=this.readSync(a.dataId),n=this.readSync(e.dataId),o=0;o<n.length;++o)r[o]=Math.min(Math.max(0,n[o]),6);return a},c.prototype.prelu=function(e,t){return i([e,t],"prelu"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return e<0?t*e:e}))},c.prototype.eluDer=function(e,t){i([e,t],"eluDer");for(var a=new Float32Array(t.size),r=this.readSync(t.dataId),n=this.readSync(e.dataId),o=0;o<r.length;++o){var s=r[o];a[o]=s>=1?n[o]:n[o]*(s+1)}return this.makeOutput(a,t.shape,"float32")},c.prototype.atan2=function(e,t){return i([e,t],"atan2"),this.broadcastedBinaryOp(e,t,e.dtype,(function(e,t){return Math.atan2(e,t)}))},c.prototype.fusedConv2d=function(e){var a=e.input,r=e.filter,n=e.convInfo,o=e.bias,i=e.activation,s=e.preluActivationWeights,d=this.conv2d(a,r,n);return o&&(d=t.add(d,o)),i&&(d=f(this,d,i,s)),d},c.prototype.conv2d=function(e,a,r){i([e,a],"conv2d");for(var n=r.filterHeight,o=r.filterWidth,s=r.dilationHeight,d=r.dilationWidth,u=r.padInfo.left,p=r.padInfo.top,l="channelsLast"===r.dataFormat,f=t.buffer(r.outShape,e.dtype),c=e.strides[0],h=l?e.strides[1]:e.strides[2],v=l?e.strides[2]:1,m=l?1:e.strides[1],y=f.strides[0],k=l?f.strides[1]:f.strides[2],g=l?f.strides[2]:1,I=l?1:f.strides[1],b=this.readSync(e.dataId),S=this.readSync(a.dataId),T=f.values,N=0;N<r.batchSize;++N)for(var x=N*c,M=N*y,F=0;F<r.outHeight;++F)for(var A=M+F*k,D=F*r.strideHeight-p,_=0;_<n;_++){var z=D+_*s;if(!(z<0||z>=r.inHeight))for(var W=_*a.strides[0],H=x+z*h,w=0;w<r.outWidth;++w)for(var C=A+w*g,E=w*r.strideWidth-u,B=0;B<o;B++){var O=E+B*d;if(!(O<0||O>=r.inWidth))for(var P=H+O*v,R=W+B*a.strides[1],q=0;q<r.inChannels;++q){for(var L=b[P+q*m],V=0;V<r.outChannels;++V)T[C+V*I]+=L*S[R+V];R+=r.outChannels}}}return f.toTensor()},c.prototype.conv3d=function(e,a,r){for(var n=r.filterDepth,o=r.filterHeight,i=r.filterWidth,s=r.dilationDepth,d=r.dilationHeight,u=r.dilationWidth,p=r.padInfo.front,l=r.padInfo.left,f=r.padInfo.top,c=t.buffer(r.outShape,e.dtype),h=this.readSync(e.dataId),v=this.readSync(a.dataId),m=c.values,y=0;y<r.batchSize;++y)for(var k=y*e.strides[0],g=y*c.strides[0],I=0;I<r.outDepth;++I)for(var b=g+I*c.strides[1],S=I*r.strideDepth-p,T=0;T<n;T++){var N=S+T*s;if(!(N<0||N>=r.inDepth))for(var x=T*a.strides[0],M=k+N*e.strides[1],F=0;F<r.outHeight;++F)for(var A=b+F*c.strides[2],D=F*r.strideHeight-f,_=0;_<o;_++){var z=D+_*d;if(!(z<0||z>=r.inHeight))for(var W=x+_*a.strides[1],H=M+z*e.strides[2],w=0;w<r.outWidth;++w)for(var C=A+w*r.outChannels,E=w*r.strideWidth-l,B=0;B<i;B++){var O=E+B*u;if(!(O<0||O>=r.inWidth))for(var P=W+B*a.strides[2],R=H+O*r.inChannels,q=P,L=0;L<r.inChannels;++L){for(var V=h[R+L],G=0;G<r.outChannels;++G)m[C+G]+=V*v[q+G];q+=r.outChannels}}}}return c.toTensor()},c.prototype.conv2dDerInput=function(e,a,r){i([e,a],"conv2dDerInput");for(var n=t.buffer(r.inShape,"float32"),o=n.values,s=this.readSync(e.dataId),d=this.readSync(a.dataId),u=a.strides,p=u[0],l=u[1],f=u[2],c=r.batchSize,h=r.filterHeight,v=r.filterWidth,m=r.inChannels,y=r.inHeight,k=r.inWidth,g=r.outChannels,I=r.outHeight,b=r.outWidth,S=r.strideHeight,T=r.strideWidth,N=r.dataFormat,x=h-1-r.padInfo.top,M=v-1-r.padInfo.left,F="channelsLast"===N,A=n.strides[0],D=F?n.strides[1]:n.strides[2],_=F?n.strides[2]:1,z=F?1:n.strides[1],W=e.strides[0],H=F?e.strides[1]:e.strides[2],w=F?e.strides[2]:1,C=F?1:e.strides[1],E=0;E<c;++E)for(var B=0;B<m;++B)for(var O=0;O<y;++O)for(var P=O-x,R=Math.max(0,Math.ceil(P/S)),q=Math.min(I,(h+P)/S),L=0;L<k;++L){for(var V=L-M,G=Math.max(0,Math.ceil(V/T)),j=Math.min(b,(v+V)/T),U=0,K=R;K<q;++K)for(var Y=K*S-P,Z=G;Z<j;++Z)for(var J=W*E+H*K+w*Z,Q=p*(h-1-Y)+l*(v-1-(Z*T-V))+f*B,X=0;X<g;++X){U+=s[J+C*X]*d[Q+X]}o[A*E+D*O+_*L+z*B]=U}return n.toTensor()},c.prototype.conv3dDerInput=function(e,a,r){for(var n=t.buffer(r.inShape,"float32"),o=n.values,i=n.strides,s=i[0],d=i[1],u=i[2],p=i[3],l=this.readSync(e.dataId),f=e.strides,c=f[0],h=f[1],v=f[2],m=f[3],y=this.readSync(a.dataId),k=a.strides,g=k[0],I=k[1],b=k[2],S=k[3],T=r.batchSize,N=r.filterDepth,x=r.filterHeight,M=r.filterWidth,F=r.inChannels,A=r.inDepth,D=r.inHeight,_=r.inWidth,z=r.outChannels,W=r.outDepth,H=r.outHeight,w=r.outWidth,C=r.strideDepth,E=r.strideHeight,B=r.strideWidth,O=N-1-r.padInfo.front,P=x-1-r.padInfo.top,R=M-1-r.padInfo.left,q=0;q<T;++q)for(var L=0;L<F;++L)for(var V=0;V<A;++V)for(var G=V-O,j=Math.max(0,Math.ceil(G/C)),U=Math.min(W,(N+G)/C),K=0;K<D;++K)for(var Y=K-P,Z=Math.max(0,Math.ceil(Y/E)),J=Math.min(H,(x+Y)/E),Q=0;Q<_;++Q){for(var X=Q-R,$=Math.max(0,Math.ceil(X/B)),ee=Math.min(w,(M+X)/B),te=0,ae=j;ae<U;++ae)for(var re=ae*C-G,ne=Z;ne<J;++ne)for(var oe=ne*E-Y,ie=$;ie<ee;++ie)for(var se=c*q+h*ae+v*ne+m*ie,de=g*(N-1-re)+I*(x-1-oe)+b*(M-1-(ie*B-X))+S*L,ue=0;ue<z;++ue){te+=l[se+ue]*y[de+ue]}o[s*q+d*V+u*K+p*Q+L]=te}return n.toTensor()},c.prototype.conv2dDerFilter=function(e,a,r){i([e,a],"conv2dDerFilter");for(var n=r.strideHeight,o=r.strideWidth,s=r.filterHeight,d=r.filterWidth,u="channelsLast"===r.dataFormat,p=t.buffer(r.filterShape,"float32"),l=r.padInfo.left,f=r.padInfo.top,c=this.bufferSync(e),h=this.bufferSync(a),v=0;v<s;++v)for(var m=Math.max(0,Math.ceil((f-v)/n)),y=Math.min(r.outHeight,(r.inHeight+f-v)/n),k=0;k<d;++k)for(var g=Math.max(0,Math.ceil((l-k)/o)),I=Math.min(r.outWidth,(r.inWidth+l-k)/o),b=0;b<r.inChannels;++b)for(var S=0;S<r.outChannels;++S){for(var T=0,N=0;N<r.batchSize;++N)for(var x=m;x<y;++x)for(var M=v+x*n-f,F=g;F<I;++F){var A=k+F*o-l;T+=u?c.get(N,M,A,b)*h.get(N,x,F,S):c.get(N,b,M,A)*h.get(N,S,x,F)}p.set(T,v,k,b,S)}return p.toTensor()},c.prototype.conv3dDerFilter=function(e,a,r){for(var n=r.strideDepth,o=r.strideHeight,i=r.strideWidth,s=r.filterDepth,d=r.filterHeight,u=r.filterWidth,p=t.buffer(r.filterShape,"float32"),l=p.values,f=p.strides,c=f[0],h=f[1],v=f[2],m=f[3],y=this.readSync(a.dataId),k=a.strides,g=k[0],I=k[1],b=k[2],S=k[3],T=this.readSync(e.dataId),N=e.strides,x=N[0],M=N[1],F=N[2],A=N[3],D=r.padInfo.front,_=r.padInfo.left,z=r.padInfo.top,W=0;W<s;++W)for(var H=Math.max(0,Math.ceil((D-W)/n)),w=Math.min(r.outDepth,(r.inDepth+D-W)/n),C=W*c,E=0;E<d;++E)for(var B=Math.max(0,Math.ceil((z-E)/o)),O=Math.min(r.outHeight,(r.inHeight+z-E)/o),P=E*h+C,R=0;R<u;++R)for(var q=Math.max(0,Math.ceil((_-R)/i)),L=Math.min(r.outWidth,(r.inWidth+_-R)/i),V=R*v+P,G=0;G<r.inChannels;++G)for(var j=G*m+V,U=0;U<r.outChannels;++U){for(var K=0,Y=0;Y<r.batchSize;++Y)for(var Z=Y*x,J=Y*g,Q=H;Q<w;++Q)for(var X=(W+Q*n-D)*M+Z,$=Q*I+J,ee=B;ee<O;++ee)for(var te=(E+ee*o-z)*F+X,ae=ee*b+$,re=q;re<L;++re){var ne=re*S+ae;K+=T[(R+re*i-_)*A+te+G]*y[ne+U]}l[j+U]=K}return p.toTensor()},c.prototype.fusedDepthwiseConv2D=function(e){var a=e.input,r=e.filter,n=e.convInfo,o=e.bias,i=e.activation,s=e.preluActivationWeights,d=this.depthwiseConv2D(a,r,n);return o&&(d=t.add(d,o)),i&&(d=f(this,d,i,s)),d},c.prototype.depthwiseConv2D=function(e,a,r){i([e,a],"depthwiseConv2D");for(var n=r.filterHeight,o=r.filterWidth,s=r.dilationHeight,d=r.dilationWidth,u=r.padInfo.left,p=r.padInfo.top,l=r.outChannels/r.inChannels,f=t.buffer(r.outShape,e.dtype),c=this.readSync(e.dataId),h=this.readSync(a.dataId),v=f.values,m=0;m<r.batchSize;++m)for(var y=m*e.strides[0],k=m*f.strides[0],g=0;g<r.outHeight;++g)for(var I=k+g*f.strides[1],b=g*r.strideHeight-u,S=0;S<n;++S){var T=b+S*s;if(!(T<0||T>=r.inHeight))for(var N=S*a.strides[0],x=y+T*e.strides[1],M=0;M<r.outWidth;++M)for(var F=I+M*f.strides[2],A=M*r.strideWidth-p,D=0;D<o;++D){var _=A+D*d;if(!(_<0||_>=r.inWidth))for(var z=N+D*a.strides[1],W=x+_*r.inChannels,H=F,w=z,C=0;C<r.inChannels;++C){for(var E=c[W+C],B=0;B<l;++B)v[H+B]+=E*h[w+B];H+=l,w+=l}}}return f.toTensor()},c.prototype.depthwiseConv2DDerInput=function(e,a,r){i([e,a],"depthwiseConv2DDerInput");for(var n=t.buffer(r.inShape,"float32"),o=n.values,s=n.strides,d=s[0],u=s[1],p=s[2],l=this.readSync(e.dataId),f=e.strides,c=f[0],h=f[1],v=f[2],m=this.readSync(a.dataId),y=a.strides,k=y[0],g=y[1],I=y[2],b=r.batchSize,S=r.filterHeight,T=r.filterWidth,N=r.inChannels,x=r.inHeight,M=r.inWidth,F=r.outChannels,A=r.outHeight,D=r.outWidth,_=r.strideHeight,z=r.strideWidth,W=S-1-r.padInfo.top,H=T-1-r.padInfo.left,w=F/N,C=0;C<b;++C)for(var E=0;E<N;++E)for(var B=0;B<x;++B)for(var O=B-W,P=Math.max(0,Math.ceil(O/_)),R=Math.min(A,(S+O)/_),q=0;q<M;++q){for(var L=q-H,V=Math.max(0,Math.ceil(L/z)),G=Math.min(D,(T+L)/z),j=0,U=P;U<R;++U)for(var K=U*_-O,Y=V;Y<G;++Y)for(var Z=c*C+h*U+v*Y,J=k*(S-1-K)+g*(T-1-(Y*z-L))+I*E,Q=0;Q<w;++Q){j+=l[Z+(E*w+Q)]*m[J+Q]}o[d*C+u*B+p*q+E]=j}return n.toTensor()},c.prototype.depthwiseConv2DDerFilter=function(e,a,r){i([e,a],"depthwiseConv2DDerFilter");for(var n=r.strideHeight,o=r.strideWidth,s=r.filterHeight,d=r.filterWidth,u=t.buffer(r.filterShape,"float32"),p=r.padInfo.left,l=r.padInfo.top,f=r.outChannels/r.inChannels,c=this.bufferSync(e),h=this.bufferSync(a),v=0;v<s;++v)for(var m=Math.max(0,Math.ceil((l-v)/n)),y=Math.min(r.outHeight,(r.inHeight+l-v)/n),k=0;k<d;++k)for(var g=Math.max(0,Math.ceil((p-k)/o)),I=Math.min(r.outWidth,(r.inWidth+p-k)/o),b=0;b<r.outChannels;++b){for(var S=Math.trunc(b/f),T=b%f,N=0,x=0;x<r.batchSize;++x)for(var M=m;M<y;++M)for(var F=v+M*n-l,A=g;A<I;++A){var D=k+A*o-p;N+=c.get(x,F,D,S)*h.get(x,M,A,b)}u.set(N,v,k,S,T)}return u.toTensor()},c.prototype.tile=function(e,t){return i(e,"tile"),u(this.bufferSync(e),t)},c.prototype.gather=function(e,a,r){i([e,a],"gather");var n=e.shape.slice(),o=this.readSync(a.dataId);n[r]=o.length;for(var s=t.buffer(n,e.dtype),d=this.bufferSync(e),u=0;u<s.size;++u){var p=s.indexToLoc(u),l=p.slice();l[r]=o[p[r]];var f=d.locToIndex(l);s.values[u]=d.values[f]}return s.toTensor()},c.prototype.batchToSpaceND=function(e,a,r){i([e],"batchToSpaceND");var n=a.reduce((function(e,t){return e*t})),o=t.backend_util.getReshaped(e.shape,a,n),s=t.backend_util.getPermuted(o.length,a.length),d=t.backend_util.getReshapedPermuted(e.shape,a,n),u=t.backend_util.getSliceBeginCoords(r,a.length),p=t.backend_util.getSliceSize(d,r,a.length);return t.transpose(e.reshape(o),s).reshape(d).slice(u,p)},c.prototype.pool3d=function(e,a,r){i(e,"pool3d");for(var n=a.strideDepth,o=a.strideHeight,s=a.strideWidth,d=a.dilationDepth,u=a.dilationHeight,p=a.dilationWidth,l=a.effectiveFilterDepth,f=a.effectiveFilterHeight,c=a.effectiveFilterWidth,h=a.padInfo.front,v=a.padInfo.top,m=a.padInfo.left,y="max"===r?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,k=this.readSync(e.dataId),g=t.buffer(a.outShape,e.dtype),I=g.values,b=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],S=a.outShape[2]*a.outShape[3]*a.outShape[4],T=a.outShape[3]*a.outShape[4],N=a.outShape[4],x=0;x<a.batchSize;++x)for(var M=x*b,F=x*e.strides[0],A=0;A<a.inChannels;++A)for(var D=0;D<a.outDepth;++D){for(var _=D*n-h,z=_;z<0;)z+=d;for(var W=Math.min(a.inDepth,l+_),H=M+D*S,w=0;w<a.outHeight;++w){for(var C=w*o-v,E=C;E<0;)E+=u;for(var B=Math.min(a.inHeight,f+C),O=H+w*T,P=0;P<a.outWidth;++P){for(var R=P*s-m,q=R;q<0;)q+=p;for(var L=Math.min(a.inWidth,c+R),V=O+P*N,G=y,j=0,U=0,K=z;K<W;K+=d){for(var Y=F+K*e.strides[1],Z=E;Z<B;Z+=u){for(var J=Y+Z*e.strides[2],Q=q;Q<L;Q+=p){var X=k[J+Q*e.strides[3]+A];if("max"===r&&X>G?G=X:"avg"===r&&(j+=X,U++),isNaN(G))break}if(isNaN(G))break}if(isNaN(G))break}I[V+A]="avg"===r?j/U:G}}}return g.toTensor()},c.prototype.avgPool3d=function(e,t){return i(e,"avgPool3d"),this.pool3d(e,t,"avg").toFloat()},c.prototype.avgPool3dBackprop=function(e,a,r){i([e,a],"avgPool3dBackprop");for(var n=r.strideDepth,o=r.strideHeight,s=r.strideWidth,d=r.filterDepth,u=r.filterHeight,p=r.filterWidth,l=r.dilationDepth,f=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,v=r.effectiveFilterHeight,m=r.effectiveFilterWidth,y=h-1-r.padInfo.front,k=m-1-r.padInfo.left,g=v-1-r.padInfo.top,I=t.buffer(a.shape,"float32"),b=1/(d*u*p),S=this.bufferSync(e),T=0;T<r.batchSize;++T)for(var N=0;N<r.inChannels;++N)for(var x=0;x<r.inDepth;++x)for(var M=0;M<r.inHeight;++M)for(var F=0;F<r.inWidth;++F){for(var A=x-y,D=M-g,_=F-k,z=0,W=0;W<h;W+=l){var H=(A+W)/n;if(!(H<0||H>=r.outDepth||Math.floor(H)!==H))for(var w=0;w<v;w+=f){var C=(D+w)/o;if(!(C<0||C>=r.outHeight||Math.floor(C)!==C))for(var E=0;E<m;E+=c){var B=(_+E)/s;if(!(B<0||B>=r.outWidth||Math.floor(B)!==B))z+=S.get(T,H,C,B,N)}}}I.set(z*b,T,x,M,F,N)}return I.toTensor()},c.prototype.maxPool3d=function(e,t){return i(e,"maxPool3d"),this.pool3d(e,t,"max").toFloat()},c.prototype.maxPool3dPositions=function(e,a){for(var r=t.buffer(a.outShape,"int32"),n=a.strideDepth,o=a.strideHeight,i=a.strideWidth,s=a.dilationDepth,d=a.dilationHeight,u=a.dilationWidth,p=a.effectiveFilterDepth,l=a.effectiveFilterHeight,f=a.effectiveFilterWidth,c=a.padInfo.front,h=a.padInfo.top,v=a.padInfo.left,m=this.bufferSync(e),y=0;y<a.batchSize;++y)for(var k=0;k<a.inChannels;++k)for(var g=0;g<a.outDepth;++g){for(var I=g*n-c,b=I;b<0;)b+=s;for(var S=Math.min(a.inDepth,p+I),T=0;T<a.outHeight;++T){for(var N=T*o-h,x=N;x<0;)x+=d;for(var M=Math.min(a.inHeight,l+N),F=0;F<a.outWidth;++F){for(var A=F*i-v,D=A;D<0;)D+=u;for(var _=Math.min(a.inWidth,f+A),z=Number.NEGATIVE_INFINITY,W=-1,H=b;H<S;H+=s)for(var w=H-I,C=x;C<M;C+=d)for(var E=C-N,B=D;B<_;B+=u){var O=B-A,P=m.get(y,H,C,B,k);P>=z&&(z=P,W=w*l*f+E*l+O)}r.set(W,y,g,T,F,k)}}}return r.toTensor()},c.prototype.maxPool3dBackprop=function(e,a,r,n){i([a,r],"maxPool3dBackprop");for(var o=this.maxPool3dPositions(a,n),s=n.strideDepth,d=n.strideHeight,u=n.strideWidth,p=n.dilationDepth,l=n.dilationHeight,f=n.dilationWidth,c=n.effectiveFilterDepth,h=n.effectiveFilterHeight,v=n.effectiveFilterWidth,m=c-1-n.padInfo.front,y=v-1-n.padInfo.left,k=h-1-n.padInfo.top,g=t.buffer(a.shape,"float32"),I=this.bufferSync(o),b=this.bufferSync(e),S=0;S<n.batchSize;++S)for(var T=0;T<n.inChannels;++T)for(var N=0;N<n.inDepth;++N)for(var x=0;x<n.inHeight;++x)for(var M=0;M<n.inWidth;++M){for(var F=N-m,A=x-k,D=M-y,_=0,z=0;z<c;z+=p){var W=(F+z)/s;if(!(W<0||W>=n.outDepth||Math.floor(W)!==W))for(var H=0;H<h;H+=l){var w=(A+H)/d;if(!(w<0||w>=n.outHeight||Math.floor(w)!==w))for(var C=0;C<v;C+=f){var E=(D+C)/u;if(!(E<0||E>=n.outWidth||Math.floor(E)!==E)){var B=c*h*v-1-I.get(S,W,w,E,T)===z*h*v+H*v+C?1:0;if(0!==B)_+=b.get(S,W,w,E,T)*B}}}}g.set(_,S,N,x,M,T)}return g.toTensor()},c.prototype.resizeBilinear=function(e,a,r,n){i(e,"resizeBilinear");for(var o=e.shape,s=o[0],d=o[1],u=o[2],p=o[3],l=this.readSync(e.dataId),f=new Float32Array(t.util.sizeFromShape([s,a,r,p])),c=[n&&a>1?d-1:d,n&&r>1?u-1:u],h=[n&&a>1?a-1:a,n&&r>1?r-1:r],v=0,m=c[0]/h[0],y=c[1]/h[1],k=0;k<s;k++)for(var g=0;g<a;g++)for(var I=m*g,b=Math.floor(I),S=I-b,T=Math.min(d-1,Math.ceil(I)),N=k*e.strides[0]+b*e.strides[1],x=k*e.strides[0]+T*e.strides[1],M=0;M<r;M++)for(var F=y*M,A=Math.floor(F),D=F-A,_=Math.min(u-1,Math.ceil(F)),z=N+A*e.strides[2],W=x+A*e.strides[2],H=N+_*e.strides[2],w=x+_*e.strides[2],C=0;C<p;C++){var E=l[z+C],B=l[W+C],O=E+(l[H+C]-E)*D,P=O+(B+(l[w+C]-B)*D-O)*S;f[v++]=P}return t.tensor(f,[s,a,r,p])},c.prototype.resizeBilinearBackprop=function(e,a,r){i([e,a],"resizeBilinearBackprop");for(var n=a.shape,o=n[0],s=n[1],d=n[2],u=n[3],p=e.shape,l=p[1],f=p[2],c=new Float32Array(o*s*d*u),h=[r&&l>1?s-1:s,r&&f>1?d-1:d],v=[r&&l>1?l-1:l,r&&f>1?f-1:f],m=h[0]/v[0],y=h[1]/v[1],k=this.readSync(e.dataId),g=0,I=0;I<o;I++)for(var b=I*a.strides[0],S=0;S<l;S++)for(var T=S*m,N=Math.floor(T),x=Math.min(Math.ceil(T),s-1),M=b+N*a.strides[1],F=b+x*a.strides[1],A=T-N,D=1-A,_=0;_<f;_++)for(var z=_*y,W=Math.floor(z),H=Math.min(Math.ceil(z),d-1),w=z-W,C=1-w,E=M+W*a.strides[2],B=M+H*a.strides[2],O=F+W*a.strides[2],P=F+H*a.strides[2],R=D*C,q=D*w,L=A*C,V=A*w,G=0;G<u;G++){var j=k[g++];c[E+G]+=j*R,c[B+G]+=j*q,c[O+G]+=j*L,c[P+G]+=j*V}return t.tensor4d(c,[o,d,s,u],a.dtype)},c.prototype.resizeNearestNeighbor=function(e,a,r,n){i(e,"resizeNearestNeighbor");for(var o=e.shape,s=o[0],d=o[1],u=o[2],p=o[3],l=this.readSync(e.dataId),f=new Float32Array(s*a*r*p),c=[n&&a>1?d-1:d,n&&r>1?u-1:u],h=[n&&a>1?a-1:a,n&&r>1?r-1:r],v=c[0]/h[0],m=c[1]/h[1],y=0,k=0;k<s;k++)for(var g=k*e.strides[0],I=0;I<a;I++)for(var b=v*I,S=g+Math.min(d-1,n?Math.round(b):Math.floor(b))*e.strides[1],T=0;T<r;T++)for(var N=m*T,x=S+Math.min(u-1,n?Math.round(N):Math.floor(N))*e.strides[2],M=0;M<p;M++){var F=l[x+M];f[y++]=F}return t.tensor(f,[s,a,r,p],e.dtype)},c.prototype.resizeNearestNeighborBackprop=function(e,a,r){i([e,a],"resizeNearestNeighborBackprop");for(var n=a.shape,o=n[0],s=n[1],d=n[2],u=n[3],p=e.shape,l=p[1],f=p[2],c=new Float32Array(o*s*d*u),h=this.readSync(e.dataId),v=[r&&l>1?s-1:s,r&&f>1?d-1:d],m=[r&&l>1?l-1:l,r&&f>1?f-1:f],y=v[0]/m[0],k=v[1]/m[1],g=1/y,I=1/k,b=2*Math.ceil(g)+2,S=2*Math.ceil(I)+2,T=0;T<o;T++)for(var N=T*a.strides[0],x=0;x<s;x++)for(var M=N+x*a.strides[1],F=Math.floor(x*g),A=Math.floor(F-b/2),D=0;D<d;D++)for(var _=M+D*a.strides[2],z=Math.floor(D*I),W=Math.floor(z-S/2),H=0;H<u;H++){for(var w=0,C=0;C<b;C++){var E=C+A;if(!(E<0||E>=l)){var B=N+E*e.strides[1],O=E*y;if(x===Math.min(s-1,r?Math.round(O):Math.floor(O)))for(var P=0;P<S;P++){var R=P+W;if(!(R<0||R>=f)){var q=B+R*e.strides[2],L=R*k;D===Math.min(d-1,r?Math.round(L):Math.floor(L))&&(w+=h[q+H])}}}}c[_+H]=w}return t.tensor4d(c,a.shape,a.dtype)},c.prototype.localResponseNormalization4D=function(e,a,r,n,o){i(e,"localResponseNormalization4D");var s=e.shape[3],d=s-1,u=this.readSync(e.dataId),p=e.size,l=new Float32Array(p);function f(e){for(var t=e%s,r=e-t+Math.max(0,t-a),n=e-t+Math.min(t+a,d),o=0;r<=n;r++){var i=u[r];o+=i*i}return o}for(var c=0;c<p;c++){var h=f(c),v=u[c]*Math.pow(r+n*h,-o);l[c]=v}return t.tensor4d(l,e.shape)},c.prototype.LRNGrad=function(e,a,r,n,o,s,d){i(e,"LRNGrad");for(var u=e.shape[3],p=this.readSync(e.dataId),l=this.readSync(a.dataId),f=this.readSync(r.dataId),c=new Float32Array(e.size),h=e.size,v=0;v<h;v++){for(var m=v%u,y=v-m+Math.max(0,m-n),k=v-m+Math.min(u,m+n+1),g=0,I=y;I<k;I++)g+=Math.pow(l[I],2);g=s*g+o;for(I=y;I<k;I++){var b=-2*s*d*l[I]*f[v]/g;v===I&&(b+=Math.pow(g,-d)),b*=p[v],c[I]+=b}}return t.tensor4d(c,e.shape)},c.prototype.multinomial=function(e,r,n,o){i(e,"multinomial");for(var s=r?e:t.softmax(e),d=s.shape[0],u=s.shape[1],p=t.zeros([d,n],"int32"),l=this.readSync(p.dataId),f=this.readSync(s.dataId),c=0;c<d;++c){var h=c*u,v=new Float32Array(u-1);v[0]=f[h];for(var m=1;m<v.length;++m)v[m]=v[m-1]+f[h+m];for(var y=a.alea(o.toString()),k=c*n,g=0;g<n;++g){var I=y();l[k+g]=v.length;for(var b=0;b<v.length;b++)if(I<v[b]){l[k+g]=b;break}}}return p},c.prototype.oneHot=function(e,a,r,n){i(e,"oneHot");var o=new Float32Array(e.size*a);o.fill(n);for(var s=this.readSync(e.dataId),d=0;d<e.size;++d)s[d]>=0&&s[d]<a&&(o[d*a+s[d]]=r);return t.tensor2d(o,[e.size,a],"int32")},c.prototype.nonMaxSuppression=function(e,t,a,r,n){i(e,"nonMaxSuppression");var o=this.readSync(e.dataId),d=this.readSync(t.dataId);return s(o,d,a,r,n)},c.prototype.depthToSpace=function(e,a,r){t.util.assert("NHWC"===r,(function(){return"Only NHWC dataFormat supported on CPU for depthToSpace. Got "+r})),t.util.assert(a>1,(function(){return"blockSize should be > 1 for depthToSpace, but was: "+a}));for(var n=e.shape[0],o=e.shape[1],i=e.shape[2],s=e.shape[3],d=o*a,u=i*a,p=s/(a*a),l=this.readSync(e.dataId),f=new Float32Array(n*d*u*p),c=0,h=0;h<n;++h)for(var v=0;v<d;++v)for(var m=Math.floor(v/a),y=v%a,k=0;k<u;++k)for(var g=Math.floor(k/a),I=(y*a+k%a)*p,b=0;b<p;++b){var S=b+I+s*(g+i*(m+o*h));f[c++]=l[S]}return t.tensor4d(f,[n,d,u,p])},c.prototype.broadcastedBinaryOp=function(e,a,r,n){var o=t.backend_util.assertAndGetBroadcastShape(e.shape,a.shape),i=t.buffer(o,r),s=this.readSync(e.dataId),d=this.readSync(a.dataId),u=t.backend_util.getBroadcastDims(e.shape,o),p=t.backend_util.getBroadcastDims(a.shape,o),l=i.values;if(u.length+p.length===0)for(var f=0;f<l.length;++f)l[f]=n(s[f%s.length],d[f%d.length]);else{var c=this.bufferSync(e),h=this.bufferSync(a),v=function(t){var r=i.indexToLoc(t),o=r.slice(-e.rank);u.forEach((function(e){return o[e]=0}));var f=c.locToIndex(o),v=r.slice(-a.rank);p.forEach((function(e){return v[e]=0}));var m=h.locToIndex(v);l[t]=n(s[f],d[m])};for(f=0;f<l.length;++f)v(f)}return i.toTensor()},c.prototype.split=function(e,t,a){return d(e,t,a)},c.prototype.dispose=function(){},c.prototype.floatPrecision=function(){return 32},c.prototype.epsilon=function(){return e.prototype.epsilon.call(this)},c.prototype.cropAndResize=function(e,a,r,n,o,i){for(var s=e.shape,d=s[0],u=s[1],p=s[2],l=s[3],f=a.shape[0],c=n[0],h=n[1],v=t.buffer([f,c,h,l],"float32"),m=this.readSync(a.dataId),y=this.readSync(r.dataId),k=this.readSync(e.dataId),g=e.strides,I=v.strides,b=0;b<f;b++){var S=4*b,T=m[S],N=m[S+1],x=m[S+2],M=m[S+3],F=y[b];if(!(F>=d))for(var A=c>1?(x-T)*(u-1)/(c-1):0,D=h>1?(M-N)*(p-1)/(h-1):0,_=0;_<c;_++){var z=c>1?T*(u-1)+_*A:.5*(T+x)*(u-1);if(z<0||z>u-1)for(var W=0;W<h;W++)for(var H=0;H<l;H++){var w=H+W*I[2]+_*I[1]+b*I[0];v.values[w]=i}else if("bilinear"===o){var C=Math.floor(z),E=Math.ceil(z),B=z-C;for(W=0;W<h;W++){if((U=h>1?N*(p-1)+W*D:.5*(N+M)*(p-1))<0||U>p-1)for(H=0;H<l;H++){w=H+W*I[2]+_*I[1]+b*I[0];v.values[w]=i}else{var O=Math.floor(U),P=Math.ceil(U),R=U-O;for(H=0;H<l;H++){var q=k[w=H+O*g[2]+C*g[1]+F*g[0]],L=k[w=H+P*g[2]+C*g[1]+F*g[0]],V=k[w=H+O*g[2]+E*g[1]+F*g[0]],G=q+(L-q)*R,j=V+(k[w=H+P*g[2]+E*g[1]+F*g[0]]-V)*R;w=H+W*I[2]+_*I[1]+b*I[0],v.values[w]=G+(j-G)*B}}}}else for(W=0;W<h;++W){var U;if((U=h>1?N*(p-1)+W*D:.5*(N+M)*(p-1))<0||U>p-1)for(H=0;H<l;H++){w=H+W*I[2]+_*I[1]+b*I[0];v.values[w]=i}else{var K=Math.round(U),Y=Math.round(z);for(H=0;H<l;H++){var Z=H+K*g[2]+Y*g[1]+F*g[0],J=H+W*I[2]+_*I[1]+b*I[0];v.values[J]=k[Z]}}}}}return v.toTensor()},c.prototype.sparseToDense=function(e,a,r,n){var o=t.backend_util.calculateShapes(a,e,r),i=o.sliceRank,s=o.numUpdates,d=o.sliceSize,u=o.strides,p=o.outputSize;return this.scatter(e,a,r,p,d,s,i,u,n,!1)},c.prototype.gatherND=function(e,a){var r=a.shape,n=r[r.length-1],o=t.backend_util.prepareAndValidate(e,a),i=o[0],s=o[1],d=o[2],u=o[3];if(0===s)return t.tensor([],i,e.dtype);for(var p=new t.TensorBuffer([s,d],e.dtype),l=this.readSync(a.dataId),f=this.readSync(e.dataId),c=0;c<s;c++){for(var h=[],v=0,m=0;m<n;m++){var y=l[c*n+m];v+=y*u[m],h.push(y)}if(v<0||v>=e.size/d)throw new Error("Invalid indices: "+h+" does not index into "+e.shape);for(var k=0;k<d;k++)p.values[c*d+k]=f[v*d+k]}return p.toTensor().reshape(i)},c.prototype.scatterND=function(e,a,r){var n=t.backend_util.calculateShapes(a,e,r),o=n.sliceRank,i=n.numUpdates,s=n.sliceSize,d=n.strides,u=n.outputSize,p=t.scalar(0);return this.scatter(e,a,r,u,s,i,o,d,p,!0)},c.prototype.fill=function(e,a,r){r=r||t.util.inferDtype(a);var n=t.util.getArrayFromDType(r,t.util.sizeFromShape(e));return n.fill(a),t.engine().makeTensor(n,e,r,this)},c.prototype.onesLike=function(e){if("string"===e.dtype)throw new Error("onesLike is not supported for string tensors");return this.fill(e.shape,1,e.dtype)},c.prototype.zerosLike=function(e){var a=t.util.getArrayFromDType(e.dtype,t.util.sizeFromShape(e.shape));return this.makeOutput(a,e.shape,e.dtype)},c.prototype.linspace=function(e,a,r){return t.backend_util.linspaceImpl(e,a,r)},c.prototype.scatter=function(e,a,r,n,o,i,s,d,u,p){var l=[n/o,o],f=this.readSync(e.dataId),c=this.readSync(a.dataId);if(0===n)return t.tensor([],r,a.dtype);var h=new t.TensorBuffer(l,a.dtype);h.values.fill(this.readSync(u.dataId)[0]);for(var v=0;v<i;v++){for(var m=[],y=0,k=0;k<s;k++){var g=f[v*s+k];m.push(g),y+=g*d[k]}if(y<0||y>=n/o)throw new Error("Invalid indices: "+m+" does not index into "+r);for(var I=0;I<o;I++)p?h.values[y*o+I]+=c[v*o+I]:h.values[y*o+I]=0===a.rank?c[0]:c[v*o+I]}return h.toTensor().reshape(r)},c}(t.KernelBackend);function h(e){for(var t=new Float32Array(e.length),a=0;a<e.length;++a)t[a]=Math.abs(e[a]);return t}var v={kernelName:t.Abs,backendName:"cpu",kernelFunc:function(e){var a=e.inputs.x,r=e.backend,n=new Float32Array(t.util.sizeFromShape(a.shape));if("complex64"!==a.dtype)n=h(r.data.get(a.dataId).values);else for(var o=r.data.get(a.dataId),i=o.complexTensorInfos.real,s=o.complexTensorInfos.imag,d=r.data.get(i.dataId).values,u=r.data.get(s.dataId).values,p=0;p<d.length;p++){var l=d[p],f=u[p];n[p]=Math.hypot(l,f)}return r.makeOutput(n,a.shape,"float32")}};function m(e){return function(a,r,n,o,i){var s=t.backend_util.assertAndGetBroadcastShape(a,r),d=s.length,u=t.util.computeStrides(s),p=t.util.sizeFromShape(s),l=t.util.getTypedArrayFromDType(i,p),f=a.length,c=r.length,h=t.util.computeStrides(a),v=t.util.computeStrides(r),m=t.backend_util.getBroadcastDims(a,s),y=t.backend_util.getBroadcastDims(r,s);if(m.length+y.length===0)for(var k=0;k<l.length;++k)l[k]=e(n[k%n.length],o[k%o.length]);else{var g=function(a){var r=t.util.indexToLoc(a,d,u),i=r.slice(-f);m.forEach((function(e){return i[e]=0}));var s=t.util.locToIndex(i,f,h),p=r.slice(-c);y.forEach((function(e){return p[e]=0}));var k=t.util.locToIndex(p,c,v);l[a]=e(n[s],o[k])};for(k=0;k<l.length;++k)g(k)}return[l,s]}}function y(e){var t=e.inputs,a=e.backend,r=t.real,n=t.imag,o=a.data.get(r.dataId).values,i=a.data.get(n.dataId).values,s=a.makeTensorInfo(r.shape,"complex64");return a.data.get(s.dataId).complexTensorInfos={real:a.makeTensorInfo(r.shape,"float32",o),imag:a.makeTensorInfo(n.shape,"float32",i)},s}var k={kernelName:t.Complex,backendName:"cpu",kernelFunc:y};function g(e){var t=e.inputs,a=e.backend,r=t.x;return a.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var I={kernelName:t.Identity,backendName:"cpu",kernelFunc:g};function b(e){var t=e.inputs,a=e.backend,r=t.input,n=a.data.get(r.dataId).complexTensorInfos.real,o=a.data.get(n.dataId).values;return a.makeTensorInfo(n.shape,n.dtype,o)}var S={kernelName:t.Real,backendName:"cpu",kernelFunc:b};function T(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a.x,i=n.dtype;if("complex64"===i){if("complex64"===o.dtype)return g({inputs:{x:o},backend:r});var s=t.zeros(o.shape),d=T({inputs:{x:o},backend:r,attrs:{dtype:"float32"}}),u=y({inputs:{real:d,imag:s},backend:r});return s.dispose(),r.disposeIntermediateTensorInfo(d),u}if("complex64"===o.dtype){var p=b({inputs:{input:o},backend:r}),u=T({inputs:{x:p},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(p),u}if(!t.util.hasEncodingLoss(o.dtype,i))return{dataId:(u=g({inputs:{x:o},backend:r})).dataId,shape:u.shape,dtype:i};if("int32"===i){var l=r.data.get(o.dataId).values,f=Int32Array.from(l);return r.makeTensorInfo(o.shape,"int32",f)}if("bool"===i){var c=r.data.get(o.dataId).values,h=t.util.toTypedArray([0],o.dtype),v=m((function(e,t){return e!==t?1:0}))(o.shape,[],c,h,"bool"),k=v[0],I=v[1];return r.makeTensorInfo(I,"bool",k)}throw new Error("Error in Cast: failed to cast "+o.dtype+" to "+i)}var N={kernelName:t.Cast,backendName:"cpu",kernelFunc:T};function x(e,t,a,r){return null==a?function(a){var n=a.inputs,o=a.backend,s=n,d=s.a,u=s.b,p=o;i([d,u],e);var l=p.data.get(d.dataId).values,f=p.data.get(u.dataId).values,c=r||d.dtype,h=t(d.shape,u.shape,l,f,c),v=h[0],m=h[1];return p.makeTensorInfo(m,c,v)}:function(e){var n=e.inputs,o=e.backend,i=n,s=i.a,d=i.b,u=o;if("complex64"===s.dtype||"complex64"===d.dtype){var p=T({inputs:{x:s},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(p.dataId),f=l.complexTensorInfos.real,c=l.complexTensorInfos.imag,h=u.data.get(f.dataId).values,v=u.data.get(c.dataId).values,m=T({inputs:{x:d},backend:u,attrs:{dtype:"complex64"}}),k=u.data.get(m.dataId),g=k.complexTensorInfos.real,I=k.complexTensorInfos.imag,b=u.data.get(g.dataId).values,S=u.data.get(I.dataId).values,N=a(s.shape,d.shape,h,v,b,S),x=N[0],M=N[1],F=N[2],A=u.makeTensorInfo(F,"float32",x),D=u.makeTensorInfo(F,"float32",M),_=y({inputs:{real:A,imag:D},backend:u});return u.disposeIntermediateTensorInfo(p),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(A),u.disposeIntermediateTensorInfo(D),_}var z=u.data.get(s.dataId).values,W=u.data.get(d.dataId).values,H=r||s.dtype,w=t(s.shape,d.shape,z,W,H),C=w[0];F=w[1];return u.makeTensorInfo(F,H,C)}}function M(e){return function(a,r,n,o,i,s){var d=t.backend_util.assertAndGetBroadcastShape(a,r),u=t.util.sizeFromShape(d),p=d.length,l=t.util.computeStrides(d),f=t.util.getTypedArrayFromDType("float32",u),c=t.util.getTypedArrayFromDType("float32",u),h=t.backend_util.getBroadcastDims(a,d),v=t.backend_util.getBroadcastDims(r,d),m=t.backend_util.mergeRealAndImagArrays(n,o),y=t.backend_util.mergeRealAndImagArrays(i,s),k=a.length,g=t.util.computeStrides(a),I=r.length,b=t.util.computeStrides(r);if(h.length+v.length===0)for(var S=0;S<f.length;S++){var T=S%m.length,N=S%y.length,x=e(m[2*T],m[2*T+1],y[2*N],y[2*N+1]);f[S]=x.real,c[S]=x.imag}else{var M=function(a){var r=t.util.indexToLoc(a,p,l),n=r.slice(-k);h.forEach((function(e){return n[e]=0}));var o=t.util.locToIndex(n,k,g),i=r.slice(-I);v.forEach((function(e){return i[e]=0}));var s=t.util.locToIndex(i,I,b),d=e(m[2*o],m[2*o+1],y[2*s],y[2*s+1]);f[a]=d.real,c[a]=d.imag};for(S=0;S<f.length;S++)M(S)}return[f,c,d]}}var F=m((function(e,t){return e+t})),A=M((function(e,t,a,r){return{real:e+a,imag:t+r}})),D=x(t.Add,F,A),_={kernelName:t.Add,backendName:"cpu",kernelFunc:D};function z(e){return function(a,r,n){for(var o=t.util.getTypedArrayFromDType(r,a.length),i=0;i<a.length;++i)o[i]=e(a[i],n);return o}}function W(e,a,r){return function(n){var o=n.inputs,s=n.attrs,d=n.backend,u=o.x;if(i(u,e),"string"===u.dtype||"string"===r)throw new Error("unaryKernelFunc does not support string input/output");for(var p=d,l=p.data.get(u.dataId).values,f=t.util.sizeFromShape(u.shape),c=r||u.dtype,h=t.util.getArrayFromDType(c,f),v=0;v<f;++v)h[v]=a(l[v],s);return p.makeTensorInfo(u.shape,c,h)}}function H(e,t,a){return function(r){var n=r.inputs,o=r.attrs,s=r.backend,d=n.x;if(i(d,e),"string"===d.dtype||"string"===a)throw new Error("unaryKernelFunc does not support string input/output");var u=s,p=u.data.get(d.dataId).values,l=a||d.dtype,f=t(p,l,o);return u.makeTensorInfo(d.shape,l,f)}}var w=z((function(e){return Math.ceil(e)})),C=H(t.Ceil,w),E={kernelName:t.Ceil,backendName:"cpu",kernelFunc:C},B=z((function(e){return Math.exp(e)})),O=H(t.Exp,B),P={kernelName:t.Exp,backendName:"cpu",kernelFunc:O},R=z((function(e){return Math.expm1(e)})),q=H(t.Expm1,R),L={kernelName:t.Expm1,backendName:"cpu",kernelFunc:q},V=z((function(e){return Math.floor(e)})),G=H(t.Floor,V),j={kernelName:t.Floor,backendName:"cpu",kernelFunc:G},U=z((function(e){return Math.log(e)})),K=H(t.Log,U),Y={kernelName:t.Log,backendName:"cpu",kernelFunc:K};function Z(e,a,r,n){for(var o=t.util.getTypedArrayFromDType(n,t.util.sizeFromShape(r)),i=0;i<o.length;++i){for(var s=i*a,d=e[s],u=0;u<a;++u){var p=e[s+u];p>d&&(d=p)}o[i]=d}return o}var J=m((function(e,t){return e*t})),Q=M((function(e,t,a,r){return{real:e*a-t*r,imag:e*r+t*a}})),X=x(t.Multiply,J,Q),$={kernelName:t.Multiply,backendName:"cpu",kernelFunc:X},ee=z((function(e){return 1/Math.sqrt(e)})),te=H(t.Rsqrt,ee),ae={kernelName:t.Rsqrt,backendName:"cpu",kernelFunc:te};function re(e,a,r,n,o){var i=t.slice_util.isSliceContinous(n,a,r),s=t.util.sizeFromShape(r),d=t.util.computeStrides(n);if(i){var u=t.slice_util.computeFlatOffset(a,d);return e.subarray(u,u+s)}for(var p=t.util.getTypedArrayFromDType(o,s),l=0;l<s;++l){var f=r.length,c=t.util.computeStrides(r),h=t.util.indexToLoc(l,f,c).map((function(e,t){return e+a[t]})),v=t.util.locToIndex(h,n.length,d);p[l]=e[v]}return p}function ne(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a.x,s=n.begin,d=n.size;i(o,"slice");var u=t.slice_util.parseSliceParams(o,s,d),p=u[0],l=u[1];t.slice_util.assertParamsValid(o,p,l);var f=re(r.data.get(o.dataId).values,p,l,o.shape,o.dtype);return r.makeTensorInfo(l,o.dtype,f)}var oe={kernelName:t.Slice,backendName:"cpu",kernelFunc:ne},ie=m((function(e,t){return e-t})),se=M((function(e,t,a,r){return{real:e-a,imag:t-r}})),de=x(t.Sub,ie,se),ue={kernelName:t.Sub,backendName:"cpu",kernelFunc:de};function pe(e,a,r,n,o){for(var i=a.length,s=t.util.sizeFromShape(a),d=t.util.computeStrides(a),u=t.util.computeStrides(o),p=t.util.getTypedArrayFromDType(r,t.util.sizeFromShape(o)),l=0;l<s;++l){for(var f=t.util.indexToLoc(l,i,d),c=new Array(f.length),h=0;h<c.length;h++)c[h]=f[n[h]];p[t.util.locToIndex(c,i,u)]=e[l]}return p}function le(e,a,r,n){for(var o=t.util.parseAxisParam(a,r)[0],i=[1,r[0],1],s=0;s<o;s++)i[0]*=r[s];i[1]=r[o];for(s=o+1;s<r.length;s++)i[2]*=r[s];var d={},u=new Int32Array(r[o]),p=new t.TensorBuffer(i,n,e),l=[],f=1===i[0]&&1===i[2];for(s=0;s<r[o];s++){var c=void 0;if(f)c=e[s].toString();else{for(var h=[],v=0;v<i[0];v++)for(var m=0;m<i[2];m++)h.push(p.get(v,s,m));c=h.join(",")}if(void 0!==d[c])u[s]=d[c];else{var y=Object.keys(d).length;d[c]=y,u[s]=y,l.push(s)}}var k=i.slice();k[1]=Object.keys(d).length;var g=new t.TensorBuffer(k,n);l.forEach((function(e,t){for(var a=0;a<i[0];a++)for(var r=0;r<i[2];r++)g.set(p.get(a,e,r),a,t,r)}));var I=r.slice();return I[o]=k[1],{outputValues:g.values,outputShape:I,indices:u}}var fe={__proto__:null,simpleAbsImpl:h,addImpl:F,ceilImpl:w,expImpl:B,expm1Impl:R,floorImpl:V,logImpl:U,maxImpl:Z,multiplyImpl:J,rsqrtImpl:ee,sliceImpl:re,subImpl:ie,transposeImpl:pe,uniqueImpl:le};t.registerBackend("cpu",(function(){return new c}),1);var ce=W(t.Acos,(function(e){return Math.acos(e)})),he={kernelName:t.Acos,backendName:"cpu",kernelFunc:ce},ve=W(t.Acosh,(function(e){return Math.acosh(e)})),me={kernelName:t.Acosh,backendName:"cpu",kernelFunc:ve},ye=W(t.Asin,(function(e){return Math.asin(e)})),ke={kernelName:t.Asin,backendName:"cpu",kernelFunc:ye},ge=W(t.Asinh,(function(e){return Math.asinh(e)})),Ie={kernelName:t.Asinh,backendName:"cpu",kernelFunc:ge},be=W(t.Atan,(function(e){return Math.atan(e)})),Se={kernelName:t.Atan,backendName:"cpu",kernelFunc:be},Te=W(t.Atanh,(function(e){return Math.atanh(e)})),Ne={kernelName:t.Atanh,backendName:"cpu",kernelFunc:Te};function xe(e,a,r,n,o,i){for(var s=o.strideHeight,d=o.strideWidth,u=o.dilationHeight,p=o.dilationWidth,l=o.effectiveFilterHeight,f=o.effectiveFilterWidth,c=o.padInfo.top,h=o.padInfo.left,v="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=t.buffer(o.outShape,r),y=m.values,k=o.outShape[1]*o.outShape[2]*o.outShape[3],g=o.outShape[2]*o.outShape[3],I=o.outShape[3],b=0;b<o.batchSize;++b)for(var S=b*k,T=b*n[0],N=0;N<o.inChannels;++N)for(var x=0;x<o.outHeight;++x)for(var M=x*s-c,F=Math.max(0,M),A=Math.min(o.inHeight,l+M),D=S+x*g,_=0;_<o.outWidth;++_){for(var z=_*d-h,W=Math.max(0,z),H=Math.min(o.inWidth,f+z),w=v,C=0,E=0,B=F;B<A;B+=u){for(var O=T+B*n[1],P=W;P<H;P+=p){var R=e[O+P*n[2]+N];"max"===i&&R>w?w=R:"avg"===i&&(C+=R,E++)}if(isNaN(w))break}y[D+_*I+N]="avg"===i?C/E:w}return m}function Me(e,a,r,n,o,i){void 0===o&&(o=!1),void 0===i&&(i=!1);for(var s=t.buffer(n.outShape,"int32"),d=n.strideHeight,u=n.strideWidth,p=n.dilationHeight,l=n.dilationWidth,f=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=n.padInfo.top,v=n.padInfo.left,m=t.buffer(a,r,e),y=0;y<n.batchSize;++y)for(var k=0;k<n.inChannels;++k)for(var g=0;g<n.outHeight;++g){for(var I=g*d-h,b=I;b<0;)b+=p;for(var S=Math.min(n.inHeight,f+I),T=0;T<n.outWidth;++T){for(var N=T*u-v,x=N;x<0;)x+=l;for(var M=Math.min(n.inWidth,c+N),F=Number.NEGATIVE_INFINITY,A=-1,D=b;D<S;D+=p)for(var _=D-I,z=x;z<M;z+=l){var W=z-N,H=m.get(y,D,z,k);H>F&&(F=H,A=o?i?((y*n.inHeight+D)*n.inWidth+z)*n.inChannels+k:(D*n.inWidth+z)*n.inChannels+k:_*c+W)}s.set(A,y,g,T,k)}}return s}var Fe={kernelName:t.AvgPool,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a.x;i(o,"avgPool");var s=n.filterSize,d=n.strides,u=n.pad,p=n.dimRoundingMode;t.util.assert(t.backend_util.eitherStridesOrDilationsAreOne(d,1),(function(){return"Error in avgPool: Either strides or dilations must be 1. Got strides "+d+" and dilations '1'"}));var l,f=t.backend_util.computePool2DInfo(o.shape,s,d,1,u,p);if(1===f.filterWidth&&1===f.filterHeight&&t.util.arraysEqual(f.inShape,f.outShape))l=g({inputs:{x:o},backend:r});else{var c=r.data.get(o.dataId).values,h=t.util.computeStrides(o.shape),v=xe(c,o.shape,o.dtype,h,f,"avg");l=r.makeTensorInfo(f.outShape,o.dtype,v.values)}return l}};var Ae={kernelName:t.AvgPoolBackprop,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a.dy,s=a.input,d=s;i([o,s],"avgPoolBackprop");for(var u=n.filterSize,p=n.strides,l=n.pad,f=t.backend_util.computePool2DInfo(d.shape,u,p,1,l),c=f.strideHeight,h=f.strideWidth,v=f.filterHeight,m=f.filterWidth,y=f.dilationHeight,k=f.dilationWidth,g=f.effectiveFilterHeight,I=f.effectiveFilterWidth,b=I-1-f.padInfo.left,S=g-1-f.padInfo.top,T=t.buffer(d.shape,"float32"),N=1/(v*m),x=r.data.get(o.dataId).values,M=t.buffer(o.shape,"float32",x),F=0;F<f.batchSize;++F)for(var A=0;A<f.inChannels;++A)for(var D=0;D<f.inHeight;++D)for(var _=0;_<f.inWidth;++_){for(var z=D-S,W=_-b,H=0,w=0;w<g;w+=y){var C=(z+w)/c;if(!(C<0||C>=f.outHeight||Math.floor(C)!==C))for(var E=0;E<I;E+=k){var B=(W+E)/h;if(!(B<0||B>=f.outWidth||Math.floor(B)!==B))H+=M.get(F,C,B,A)}}T.set(H*N,F,D,_,A)}return r.makeTensorInfo(T.shape,T.dtype,T.values)}};var De={kernelName:t.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a.x,s=a.scale,d=a.offset,u=a.mean,p=a.variance;t.util.assert(u.shape.length===p.shape.length,(function(){return"Batch normalization gradient requires mean and variance to have equal ranks."})),t.util.assert(null==d||u.shape.length===d.shape.length,(function(){return"Batch normalization gradient requires mean and offset to have equal ranks."})),t.util.assert(null==s||u.shape.length===s.shape.length,(function(){return"Batch normalization gradient requires mean and scale to have equal ranks."})),i([o,u,p,s,d],"batchNorm");var l=n.varianceEpsilon;null==l&&(l=.001);for(var f=r.data.get(o.dataId).values,c=r.data.get(u.dataId).values,h=r.data.get(p.dataId).values,v=s?r.data.get(s.dataId).values:new Float32Array([1]),m=d?r.data.get(d.dataId).values:new Float32Array([0]),y=new Float32Array(f.length),k=m.length,g=v.length,I=h.length,b=c.length,S=0,T=0,N=0,x=0,M=0;M<f.length;++M)y[M]=m[S++]+(f[M]-c[T++])*v[N++]/Math.sqrt(h[x++]+l),S>=k&&(S=0),T>=b&&(T=0),N>=g&&(N=0),x>=I&&(x=0);return r.makeTensorInfo(o.shape,o.dtype,y)}},_e=W(t.ClipByValue,(function(e,t){var a=t;return e>a.clipValueMax?a.clipValueMax:e<a.clipValueMin?a.clipValueMin:e})),ze={kernelName:t.ClipByValue,backendName:"cpu",kernelFunc:_e};function We(e){var t=e.inputs,a=e.backend,r=t.input,n=a.data.get(r.dataId).complexTensorInfos.imag,o=a.data.get(n.dataId).values;return a.makeTensorInfo(n.shape,n.dtype,o)}var He={kernelName:t.Imag,backendName:"cpu",kernelFunc:We};function we(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a.x,i=n.shape,s=t.util.sizeFromShape(o.shape),d=t.util.inferFromImplicitShape(i,s),u=t.util.sizeFromShape(d);t.util.assert(s===u,(function(){return"The new shape ("+d+") has "+u+" elements and the old shape ("+o.shape+") has "+s+" elements. The new shape and old shape must have the same number of elements."})),r.incRef(o.dataId);var p=r.data.get(o.dataId);if(null!=p.complexTensorInfos){var l=p.complexTensorInfos.real,f=p.complexTensorInfos.imag;l.shape=d,f.shape=d}return{dataId:o.dataId,shape:d,dtype:o.dtype}}var Ce={kernelName:t.Reshape,backendName:"cpu",kernelFunc:we};function Ee(e){var a=e.inputs,r=e.backend,n=e.attrs.axis,o=t.util.parseAxisParam(n,a[0].shape)[0],i=t.backend_util.computeOutShape(a.map((function(e){return e.shape})),o);if(0===t.util.sizeFromShape(i))return r.makeTensorInfo(i,a[0].dtype,[]);var s=a.filter((function(e){return t.util.sizeFromShape(e.shape)>0}));if(1===s.length)return s[0];var d=s.map((function(e){return e.shape}));if(t.backend_util.assertParamsConsistent(d,o),"complex64"===s[0].dtype){var u=s.map((function(e){return b({inputs:{input:e},backend:r})})),p=s.map((function(e){return We({inputs:{input:e},backend:r})})),l=Ee({inputs:u,backend:r,attrs:{axis:n}}),f=Ee({inputs:p,backend:r,attrs:{axis:n}}),c=y({inputs:{real:l,imag:f},backend:r});return u.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),p.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(f),c}var h=s.map((function(e){var a=t.util.sizeFromShape(e.shape.slice(o));return we({inputs:{x:e},backend:r,attrs:{shape:[-1,a]}})}));i=t.backend_util.computeOutShape(h.map((function(e){return e.shape})),1);var v=t.util.getTypedArrayFromDType(s[0].dtype,t.util.sizeFromShape(i));if(1===h[0].shape[0]){var m=0;h.forEach((function(e){var a=r.data.get(e.dataId).values,n=t.util.sizeFromShape(e.shape);v.set(a,m),m+=n}))}else{var k=0;h.forEach((function(e){for(var t=r.data.get(e.dataId).values,a=0,n=0;n<e.shape[0];++n)for(var o=n*i[1]+k,s=0;s<e.shape[1];++s)v[o+s]=t[a++];k+=e.shape[1]}))}var g=t.backend_util.computeOutShape(s.map((function(e){return e.shape})),o),I=r.makeTensorInfo(g,a[0].dtype,v);return h.forEach((function(e){return r.disposeIntermediateTensorInfo(e)})),I}var Be={kernelName:t.Concat,backendName:"cpu",kernelFunc:Ee},Oe=W(t.Cos,(function(e){return Math.cos(e)})),Pe={kernelName:t.Cos,backendName:"cpu",kernelFunc:Oe},Re=W(t.Cosh,(function(e){return Math.cosh(e)})),qe={kernelName:t.Cosh,backendName:"cpu",kernelFunc:Re},Le={kernelName:t.Dilation2D,backendName:"cpu",kernelFunc:function(e){for(var a=e.inputs,r=e.backend,n=e.attrs,o=a,i=o.x,s=o.filter,d=n,u=d.strides,p=d.pad,l=d.dilations,f=r,c=f.data.get(i.dataId).values,h=i.shape.length,v=f.data.get(s.dataId).values,m=s.shape.length,y=t.backend_util.computeDilation2DInfo(i.shape,s.shape,u,p,"NHWC",l),k=y.batchSize,g=y.inHeight,I=y.inWidth,b=y.inChannels,S=y.outHeight,T=y.outWidth,N=y.padInfo,x=y.strideHeight,M=y.strideWidth,F=y.filterHeight,A=y.filterWidth,D=y.dilationHeight,_=y.dilationWidth,z=y.outShape,W=t.util.sizeFromShape(z),H=z.length,w=t.util.getArrayFromDType(i.dtype,W),C=0;C<k;++C)for(var E=0;E<S;++E)for(var B=E*x-N.top,O=0;O<T;++O)for(var P=O*M-N.left,R=0;R<b;++R){for(var q=Number.MIN_SAFE_INTEGER,L=0;L<F;++L){var V=B+L*D;if(V>=0&&V<g)for(var G=0;G<A;++G){var j=P+G*_;if(j>=0&&j<I){var U=t.util.locToIndex([C,V,j,R],h,t.util.computeStrides(i.shape)),K=t.util.locToIndex([L,G,R],m,t.util.computeStrides(s.shape)),Y=c[U]+v[K];Y>q&&(q=Y)}}}w[t.util.locToIndex([C,E,O,R],H,t.util.computeStrides(z))]=q}return{dataId:f.write(t.util.toTypedArray(w,i.dtype),z,i.dtype),shape:z,dtype:i.dtype}}},Ve={kernelName:t.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a,i=o.x,s=o.filter,d=o.dy,u=n,p=u.strides,l=u.pad,f=u.dilations,c=r,h=t.util.toNestedArray(i.shape,c.data.get(i.dataId).values),v=t.util.toNestedArray(s.shape,c.data.get(s.dataId).values),m=t.backend_util.computeDilation2DInfo(i.shape,s.shape,p,l,"NHWC",f),y=m.batchSize,k=m.inHeight,g=m.inWidth,I=m.inChannels,b=m.outHeight,S=m.outWidth,T=m.padInfo,N=m.strideHeight,x=m.strideWidth,M=m.filterHeight,F=m.filterWidth,A=m.dilationHeight,D=m.dilationWidth,_=m.outShape;t.util.assert(d.rank===_.length,(function(){return"Error in "+t.Dilation2DBackpropFilter+", dy must have the same rank as output "+_.length+", but got "+d.rank}));for(var z=t.util.toNestedArray(_,c.data.get(d.dataId).values),W=t.util.makeZerosNestedTypedArray(s.shape,s.dtype),H=0;H<y;++H)for(var w=0;w<b;++w)for(var C=w*N-T.top,E=0;E<S;++E)for(var B=E*x-T.left,O=0;O<I;++O){for(var P=Number.MIN_SAFE_INTEGER,R=0,q=0,L=0;L<M;++L){var V=C+L*A;if(V>=0&&V<k)for(var G=0;G<F;++G){var j=B+G*D;if(j>=0&&j<g){var U=h[H][V][j][O]+v[L][G][O];U>P&&(P=U,R=L,q=G)}}}W[R][q][O]+=z[H][w][E][O]}return{dataId:c.write(t.util.toTypedArray(W,i.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Ge={kernelName:t.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a,i=o.x,s=o.filter,d=o.dy,u=n,p=u.strides,l=u.pad,f=u.dilations,c=r,h=t.util.toNestedArray(i.shape,c.data.get(i.dataId).values),v=t.util.toNestedArray(s.shape,c.data.get(s.dataId).values),m=t.backend_util.computeDilation2DInfo(i.shape,s.shape,p,l,"NHWC",f),y=m.batchSize,k=m.inHeight,g=m.inWidth,I=m.inChannels,b=m.outHeight,S=m.outWidth,T=m.padInfo,N=m.strideHeight,x=m.strideWidth,M=m.filterHeight,F=m.filterWidth,A=m.dilationHeight,D=m.dilationWidth,_=m.outShape;t.util.assert(d.rank===_.length,(function(){return"Error in "+t.Dilation2DBackpropInput+", dy must have the same rank as output "+_.length+", but got "+d.rank}));for(var z=t.util.toNestedArray(_,c.data.get(d.dataId).values),W=t.util.makeZerosNestedTypedArray(i.shape,i.dtype),H=0;H<y;++H)for(var w=0;w<b;++w)for(var C=w*N-T.top,E=0;E<S;++E)for(var B=E*x-T.left,O=0;O<I;++O){for(var P=Number.MIN_SAFE_INTEGER,R=C<0?0:C,q=B<0?0:B,L=0;L<M;++L){var V=C+L*A;if(V>=0&&V<k)for(var G=0;G<F;++G){var j=B+G*D;if(j>=0&&j<g){var U=h[H][V][j][O]+v[L][G][O];U>P&&(P=U,R=V,q=j)}}}W[H][R][q][O]+=z[H][w][E][O]}return{dataId:c.write(t.util.toTypedArray(W,i.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},je=m((function(e,t){return e/t})),Ue=x(t.Div,je),Ke={kernelName:t.Div,backendName:"cpu",kernelFunc:Ue},Ye=W(t.Elu,(function(e){return e>=0?e:Math.exp(e)-1})),Ze={kernelName:t.Elu,backendName:"cpu",kernelFunc:Ye},Je=t.backend_util.ERF_P,Qe=t.backend_util.ERF_A1,Xe=t.backend_util.ERF_A2,$e=t.backend_util.ERF_A3,et=t.backend_util.ERF_A4,tt=t.backend_util.ERF_A5,at=W(t.Erf,(function(e){var t=Math.sign(e),a=Math.abs(e),r=1/(1+Je*a);return t*(1-((((tt*r+et)*r+$e)*r+Xe)*r+Qe)*r*Math.exp(-a*a))})),rt={kernelName:t.Erf,backendName:"cpu",kernelFunc:at};function nt(e,a,r){for(var n=e.shape,o=n[0],i=n[1],s=r.data.get(e.dataId),d=s.complexTensorInfos.real,u=s.complexTensorInfos.imag,p=[o,i],l=t.util.sizeFromShape(p),f=t.util.getTypedArrayFromDType("float32",l),c=t.util.getTypedArrayFromDType("float32",l),h=0;h<o;h++){for(var v=ne({inputs:{x:d},backend:r,attrs:{begin:[h,0],size:[1,i]}}),m=ne({inputs:{x:u},backend:r,attrs:{begin:[h,0],size:[1,i]}}),k=y({inputs:{real:v,imag:m},backend:r}),g=ot(k,a,r),I=g.real,b=g.imag,S=t.backend_util.mergeRealAndImagArrays(I,b),T=0;T<i;T++){var N=t.backend_util.getComplexWithIndex(S,T);f[h*i+T]=N.real,c[h*i+T]=N.imag}r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(k)}var x=r.makeTensorInfo(p,"float32",f),M=r.makeTensorInfo(p,"float32",c),F=y({inputs:{real:x,imag:M},backend:r});return r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(M),F}function ot(e,a,r){var n=t.util.sizeFromShape(e.shape),o=r.data.get(e.dataId),i=r.data.get(o.complexTensorInfos.real.dataId).values,s=r.data.get(o.complexTensorInfos.imag.dataId).values;if(0==((I=n)&I-1)){var d=function e(a,r,n,o,i){if(1===n)return{real:a,imag:r};var s=t.backend_util.mergeRealAndImagArrays(a,r),d=n/2,u=t.backend_util.complexWithEvenIndex(s),p=u.real,l=u.imag,f=[p.length],c=i.makeTensorInfo(f,"float32",p),h=i.makeTensorInfo(f,"float32",l),v=y({inputs:{real:c,imag:h},backend:i}),m=t.backend_util.complexWithOddIndex(s),k=m.real,g=m.imag,I=[k.length],S=i.makeTensorInfo(I,"float32",k),T=i.makeTensorInfo(I,"float32",g),N=y({inputs:{real:S,imag:T},backend:i}),x=e(p,l,d,o,i),M=x.real,F=x.imag,A=[M.length],_=i.makeTensorInfo(A,"float32",M),z=i.makeTensorInfo(A,"float32",F),W=y({inputs:{real:_,imag:z},backend:i}),H=e(k,g,d,o,i),w=H.real,C=H.imag,E=[w.length],B=i.makeTensorInfo(E,"float32",w),O=i.makeTensorInfo(E,"float32",C),P=y({inputs:{real:B,imag:O},backend:i}),R=t.backend_util.exponents(n,o),q=[R.real.length],L=i.makeTensorInfo(q,"float32",R.real),V=i.makeTensorInfo(q,"float32",R.imag),G=y({inputs:{real:L,imag:V},backend:i}),j=X({inputs:{a:G,b:P},backend:i}),U=D({inputs:{a:W,b:j},backend:i}),K=de({inputs:{a:W,b:j},backend:i}),Y=b({inputs:{input:U},backend:i}),Z=b({inputs:{input:K},backend:i}),J=We({inputs:{input:U},backend:i}),Q=We({inputs:{input:K},backend:i}),$=Ee({inputs:[Y,Z],backend:i,attrs:{axis:0}}),ee=Ee({inputs:[J,Q],backend:i,attrs:{axis:0}}),te=i.data.get($.dataId).values,ae=i.data.get(ee.dataId).values;return i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(h),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(S),i.disposeIntermediateTensorInfo(T),i.disposeIntermediateTensorInfo(N),i.disposeIntermediateTensorInfo(_),i.disposeIntermediateTensorInfo(z),i.disposeIntermediateTensorInfo(W),i.disposeIntermediateTensorInfo(B),i.disposeIntermediateTensorInfo(O),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(L),i.disposeIntermediateTensorInfo(V),i.disposeIntermediateTensorInfo(G),i.disposeIntermediateTensorInfo(j),i.disposeIntermediateTensorInfo(U),i.disposeIntermediateTensorInfo(K),i.disposeIntermediateTensorInfo(Y),i.disposeIntermediateTensorInfo(J),i.disposeIntermediateTensorInfo(Z),i.disposeIntermediateTensorInfo(Q),i.disposeIntermediateTensorInfo($),i.disposeIntermediateTensorInfo(ee),{real:te,imag:ae}}(i,s,n,a,r),u=[e.shape[0],e.shape[1]];if(a){var p=r.makeTensorInfo(u,"float32",d.real),l=r.makeTensorInfo(u,"float32",d.imag),f=r.makeTensorInfo([],"float32",t.util.createScalarValue(n,"float32")),c=g({inputs:{x:f},backend:r}),h=Ke.kernelFunc({inputs:{a:p,b:f},backend:r}),v=Ke.kernelFunc({inputs:{a:l,b:c},backend:r}),m=r.data.get(h.dataId).values,k=r.data.get(v.dataId).values;return r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(l),r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(v),{real:m,imag:k}}return d}var I,S=function(e,a,r){for(var n=new Float32Array(2*a),o=0;o<a;o++){for(var i=0,s=0,d=0;d<a;d++){var u=t.backend_util.exponent(o*d,a,r),p=t.backend_util.getComplexWithIndex(e,d);i+=p.real*u.real-p.imag*u.imag,s+=p.real*u.imag+p.imag*u.real}r&&(i/=a,s/=a),t.backend_util.assignToTypedArray(n,i,s,o)}return n}(t.backend_util.mergeRealAndImagArrays(i,s),n,a);return t.backend_util.splitRealAndImagArrays(S)}var it={kernelName:t.FFT,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=a.input,o=t.util.sizeFromShape(n.shape),i=n.shape[n.shape.length-1],s=we({inputs:{x:n},backend:r,attrs:{shape:[o/i,i]}}),d=nt(s,!1,r),u=we({inputs:{x:d},backend:r,attrs:{shape:n.shape}});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(d),u}},st={kernelName:t.FlipLeftRight,backendName:"cpu",kernelFunc:function(e){for(var a=e.inputs,r=(e.attrs,e.backend),n=a.image,o=r,i=t.util.getTypedArrayFromDType(n.dtype,t.util.sizeFromShape(n.shape)),s=n.shape,d=s[0],u=s[1],p=s[2],l=s[3],f=o.data.get(n.dataId).values,c=0;c<d;c++)for(var h=c*p*u*l,v=0;v<u;v++)for(var m=v*(p*l),y=0;y<p;y++)for(var k=y*l,g=0;g<l;g++){var I=[d,v,y,g][2],b=Math.round(p-I),S=h+m+k+g,T=f[S];if(b>=0&&b<p)T=f[h+m+b*l+g];i[S]=T}return{dataId:o.write(i,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var dt={kernelName:t.IFFT,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=a.input,o=t.util.sizeFromShape(n.shape),i=n.shape[n.shape.length-1],s=we({inputs:{x:n},backend:r,attrs:{shape:[o/i,i]}}),d=nt(s,!0,r),u=we({inputs:{x:d},backend:r,attrs:{shape:n.shape}});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(d),u}},ut=W(t.IsFinite,(function(e){return Number.isFinite(e)?1:0}),"bool"),pt={kernelName:t.IsFinite,backendName:"cpu",kernelFunc:ut},lt=W(t.IsInf,(function(e){return Math.abs(e)===1/0?1:0}),"bool"),ft={kernelName:t.IsInf,backendName:"cpu",kernelFunc:lt},ct=W(t.IsNan,(function(e){return Number.isNaN(e)?1:0}),"bool"),ht={kernelName:t.IsNan,backendName:"cpu",kernelFunc:ct},vt=W(t.Log1p,(function(e){return Math.log1p(e)})),mt={kernelName:t.Log1p,backendName:"cpu",kernelFunc:vt},yt=W(t.LogicalNot,(function(e){return e?0:1}),"bool"),kt={kernelName:t.LogicalNot,backendName:"cpu",kernelFunc:yt},gt={kernelName:t.Max,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.attrs,n=e.backend,o=a.x,s=r,d=s.reductionIndices,u=s.keepDims,p=n,l=o.shape,f=l.length,c=t.util.parseAxisParam(d,l),h=c,v=t.backend_util.getAxesPermutation(h,f),m=p.data.get(o.dataId).values;if(null!=v){for(var y=new Array(f),k=0;k<y.length;k++)y[k]=l[v[k]];m=pe(m,l,o.dtype,v,y),h=t.backend_util.getInnerMostAxes(h.length,f),l=y}i(o,"max"),t.backend_util.assertAxesAreInnerMostDims("max",h,f);var g=t.backend_util.computeOutAndReduceShapes(l,h),I=g[0],b=g[1],S=Z(m,t.util.sizeFromShape(b),I,o.dtype),T=p.write(S,I,o.dtype),N=I;u&&(N=y=t.backend_util.expandShapeToKeepDim(I,c));return{dataId:T,shape:N,dtype:o.dtype}}};var It={kernelName:t.MaxPool,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a.x;i(o,"maxPool");var s=n.filterSize,d=n.strides,u=n.pad,p=n.dimRoundingMode;t.util.assert(t.backend_util.eitherStridesOrDilationsAreOne(d,1),(function(){return"Error in maxPool: Either strides or dilations must be 1. Got strides "+d+" and dilations '1'"}));var l,f=t.backend_util.computePool2DInfo(o.shape,s,d,1,u,p);if(1===f.filterWidth&&1===f.filterHeight&&t.util.arraysEqual(f.inShape,f.outShape))l=g({inputs:{x:o},backend:r});else{var c=r.data.get(o.dataId).values,h=t.util.computeStrides(o.shape),v=xe(c,o.shape,o.dtype,h,f,"max");l=r.makeTensorInfo(f.outShape,o.dtype,v.values)}return l}};var bt={kernelName:t.MaxPoolBackprop,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a.dy,s=a.input,d=s;i([s,a.output],"maxPoolBackprop");for(var u=n.filterSize,p=n.strides,l=n.pad,f=n.dimRoundingMode,c=t.backend_util.computePool2DInfo(d.shape,u,p,1,l,f),h=r.data.get(d.dataId).values,v=t.buffer(c.outShape,d.dtype,Me(h,d.shape,d.dtype,c).values),m=c.strideHeight,y=c.strideWidth,k=c.dilationHeight,g=c.dilationWidth,I=c.effectiveFilterHeight,b=c.effectiveFilterWidth,S=b-1-c.padInfo.left,T=I-1-c.padInfo.top,N=t.buffer(d.shape,"float32"),x=r.data.get(o.dataId).values,M=t.buffer(o.shape,"float32",x),F=0;F<c.batchSize;++F)for(var A=0;A<c.inChannels;++A)for(var D=0;D<c.inHeight;++D)for(var _=0;_<c.inWidth;++_){for(var z=D-T,W=_-S,H=0,w=0;w<I;w+=k){var C=(z+w)/m;if(!(C<0||C>=c.outHeight||Math.floor(C)!==C))for(var E=0;E<b;E+=g){var B=(W+E)/y;if(!(B<0||B>=c.outWidth||Math.floor(B)!==B)){var O=I*b-1-v.get(F,C,B,A)===w*b+E?1:0;if(0!==O)H+=M.get(F,C,B,A)*O}}}N.set(H,F,D,_,A)}return r.makeTensorInfo(N.shape,N.dtype,N.values)}};var St={kernelName:t.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.attrs,n=e.backend,o=a.x,s=r,d=s.filterSize,u=s.strides,p=s.pad,l=s.includeBatchInIndex,f=n;i(o,"MaxPoolWithArgmax");var c=f.data.get(o.dataId).values,h=t.backend_util.computePool2DInfo(o.shape,d,u,[1,1],p),v=function(e,a,r,n,o){var i=xe(e,0,r,t.util.computeStrides(a),o,"max"),s=Me(e,a,r,o,!0,n);return[i.values,s.values]}(c,o.shape,o.dtype,l,h),m=v[0],y=v[1],k=f.write(m,h.outShape,o.dtype),g=f.write(y,h.outShape,o.dtype);return[{dataId:k,shape:h.outShape,dtype:o.dtype},{dataId:g,shape:h.outShape,dtype:"int32"}]}},Tt=t.kernel_impls.nonMaxSuppressionV4Impl,Nt={kernelName:t.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){var t=e.inputs,a=e.backend,r=e.attrs,n=t,o=n.boxes,s=n.scores,d=r,u=d.maxOutputSize,p=d.iouThreshold,l=d.scoreThreshold,f=d.padToMaxOutputSize,c=a;i(o,"NonMaxSuppressionPadded");var h=c.data.get(o.dataId).values,v=c.data.get(s.dataId).values,m=Tt(h,v,u,p,l,f);return[m.selectedIndices,m.validOutputs]}},xt=t.kernel_impls.nonMaxSuppressionV5Impl,Mt={kernelName:t.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){var t=e.inputs,a=e.backend,r=e.attrs,n=t,o=n.boxes,s=n.scores,d=r,u=d.maxOutputSize,p=d.iouThreshold,l=d.scoreThreshold,f=d.softNmsSigma,c=a;i(o,"NonMaxSuppressionWithScore");var h=c.data.get(o.dataId).values,v=c.data.get(s.dataId).values,m=xt(h,v,u,p,l,f);return[m.selectedIndices,m.selectedScores]}},Ft=m((function(e,t){return e!==t?1:0})),At=x(t.NotEqual,Ft,null,"bool"),Dt={kernelName:t.NotEqual,backendName:"cpu",kernelFunc:At};var _t={kernelName:t.PadV2,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a.x,s=n.paddings,d=n.constantValue;i(o,"pad");var u=s.map((function(e,t){return e[0]+o.shape[t]+e[1]})),p=s.map((function(e){return e[0]})),l=r.data.get(o.dataId).values,f=t.util.sizeFromShape(o.shape),c=o.shape.length,h=t.util.computeStrides(o.shape),v=t.util.sizeFromShape(u),m=u.length,y=t.util.computeStrides(u),k=t.util.getTypedArrayFromDType(o.dtype,v);0!==d&&k.fill(d);for(var g=0;g<f;g++){var I=t.util.indexToLoc(g,c,h).map((function(e,t){return e+p[t]}));k[t.util.locToIndex(I,m,y)]=l[g]}return{dataId:r.write(k,u,o.dtype),shape:u,dtype:o.dtype}}},zt=W(t.Reciprocal,(function(e){return 1/e})),Wt={kernelName:t.Reciprocal,backendName:"cpu",kernelFunc:zt},Ht={kernelName:t.RotateWithOffset,backendName:"cpu",kernelFunc:function(e){for(var a=e.inputs,r=e.attrs,n=e.backend,o=a.image,i=r,s=i.radians,d=i.fillValue,u=i.center,p=n,l=t.util.getTypedArrayFromDType(o.dtype,t.util.sizeFromShape(o.shape)),f=o.shape,c=f[0],h=f[1],v=f[2],m=f[3],y=t.backend_util.getImageCenter(u,h,v),k=y[0],g=y[1],I=Math.sin(s),b=Math.cos(s),S=p.data.get(o.dataId).values,T=0;T<c;T++)for(var N=T*v*h*m,x=0;x<h;x++)for(var M=x*(v*m),F=0;F<v;F++)for(var A=F*m,D=0;D<m;D++){var _=[c,x,F,D],z=_[2],W=_[1],H=(z-k)*b-(W-g)*I,w=(z-k)*I+(W-g)*b;H=Math.round(H+k),w=Math.round(w+g);var C=d;if("number"!=typeof d&&(C=3===D?255:d[D]),H>=0&&H<v&&w>=0&&w<h)C=S[N+w*(v*m)+H*m+D];l[N+M+A+D]=C}return{dataId:p.write(l,o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}},wt=W(t.Round,(function(e){var t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Ct={kernelName:t.Round,backendName:"cpu",kernelFunc:wt},Et=t.backend_util.SELU_SCALEALPHA,Bt=t.backend_util.SELU_SCALE,Ot=W(t.Selu,(function(e){return e>=0?Bt*e:Et*(Math.exp(e)-1)})),Pt={kernelName:t.Selu,backendName:"cpu",kernelFunc:Ot},Rt=W(t.Sigmoid,(function(e){return 1/(1+Math.exp(-e))})),qt={kernelName:t.Sigmoid,backendName:"cpu",kernelFunc:Rt},Lt=W(t.Sign,(function(e){return e<0?-1:e>0?1:0})),Vt={kernelName:t.Sign,backendName:"cpu",kernelFunc:Lt},Gt=W(t.Sin,(function(e){return Math.sin(e)})),jt={kernelName:t.Sin,backendName:"cpu",kernelFunc:Gt},Ut=W(t.Sinh,(function(e){return Math.sinh(e)})),Kt={kernelName:t.Sinh,backendName:"cpu",kernelFunc:Ut},Yt=Math.log(1.1920928955078125e-7)+2,Zt=W(t.Softplus,(function(e){var t=e>-Yt,a=e<Yt,r=Math.exp(e);return a?r:t?e:Math.log(1+r)})),Jt={kernelName:t.Softplus,backendName:"cpu",kernelFunc:Zt};function Qt(e){var t=e.inputs,a=e.attrs,r=e.backend,n=t.x,o=a.perm;i(n,"transpose");for(var s=n.shape.length,d=new Array(s),u=0;u<d.length;u++)d[u]=n.shape[o[u]];var p=pe(r.data.get(n.dataId).values,n.shape,n.dtype,o,d);return{dataId:r.write(p,d,n.dtype),shape:d,dtype:n.dtype}}var Xt={kernelName:t.Transpose,backendName:"cpu",kernelFunc:Qt};var $t={kernelName:t.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){var a=e.inputs,r=e.backend,n=e.attrs,o=a.x,s=n.blockShape,d=n.paddings;i([o],"spaceToBatchND");var u=t.util.sizeFromShape(s),p=[[0,0]];p.push.apply(p,d);for(var l=1+s.length;l<o.shape.length;++l)p.push([0,0]);var f=_t.kernelFunc({inputs:{x:o},backend:r,attrs:{paddings:p,constantValue:0}}),c=t.backend_util.getReshaped(f.shape,s,u,!1),h=t.backend_util.getPermuted(c.length,s.length,!1),v=t.backend_util.getReshapedPermuted(f.shape,s,u,!1),m=we({inputs:{x:f},backend:r,attrs:{shape:c}}),y=Qt({inputs:{x:m},backend:r,attrs:{perm:h}}),k=we({inputs:{x:y},backend:r,attrs:{shape:v}});return r.disposeIntermediateTensorInfo(f),r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(y),k}},ea=W(t.Sqrt,(function(e){return Math.sqrt(e)})),ta={kernelName:t.Sqrt,backendName:"cpu",kernelFunc:ea},aa={kernelName:t.Square,backendName:"cpu",kernelFunc:function(e){var t=e.inputs,a=e.backend,r=t.x,n=a;i(r,"square");for(var o=n.data.get(r.dataId).values,s=new Float32Array(o.length),d=0;d<o.length;++d){var u=o[d];s[d]=u*u}return{dataId:n.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},ra=m((function(e,t){var a=e-t;return a*a})),na=x(t.SquaredDifference,ra),oa={kernelName:t.SquaredDifference,backendName:"cpu",kernelFunc:na},ia=W(t.Step,(function(e,t){var a=t;return isNaN(e)?NaN:e>0?1:a.alpha})),sa={kernelName:t.Step,backendName:"cpu",kernelFunc:ia},da=W(t.Tan,(function(e){return Math.tan(e)})),ua={kernelName:t.Tan,backendName:"cpu",kernelFunc:da},pa=W(t.Tanh,(function(e){return Math.tanh(e)})),la={kernelName:t.Tanh,backendName:"cpu",kernelFunc:pa};for(var fa={kernelName:t.Unique,backendName:"cpu",kernelFunc:function(e){var t=e.inputs,a=e.attrs,r=e.backend,n=a.axis,o=t.x;i(o,"unique");var s=le(r.data.get(o.dataId).values,n,o.shape,o.dtype),d=s.outputValues,u=s.outputShape,p=s.indices;return[r.makeTensorInfo(u,o.dtype,d),r.makeTensorInfo([p.length],"int32",p)]}},ca=0,ha=[v,he,me,_,ke,Ie,Se,Ne,Fe,Ae,De,N,E,ze,k,Be,Pe,qe,Le,Ge,Ve,Ke,Ze,rt,P,L,it,st,j,I,dt,He,pt,ft,ht,Y,mt,kt,It,bt,St,gt,$,Nt,Mt,Dt,_t,S,Wt,Ce,Ht,Ct,ae,Pt,qt,Vt,jt,Kt,oe,Jt,$t,ta,aa,oa,sa,ue,ua,la,Xt,fa];ca<ha.length;ca++){var va=ha[ca];t.registerKernel(va)}e.MathBackendCPU=c,e.shared=fe,e.version_cpu="2.6.0",Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=tf-backend-cpu.min.js.map
